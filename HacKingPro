#!/bin/sh
#!/bin/bash
#!/usr/bin/sh
#!/usr/bin/bash
#!/usr/bin/env sh
#!/usr/bin/env bash
#!/data/data/com.termux/files/usr/bin/sh
#!/data/data/com.termux/files/usr/bin/bash
###############################################
Anlominus="Anlominus"
# Name : Anlominus ~ HacKingPro
# Description : HacKingPro ~ enter your target and Hack Him in the end get Markdown Report.
# Created Date : 2022 May
# Last UPDATE : 2022 June 24
# Aouther: Anlominus ~> RhytMix ~> HacKingPro
# Skils: Best Copywriter IN the COSMOS!
# BIG THANX TO ALL COMUNITY THAT SHARE ALL THAT FREE GREAT SCRIPTS
# CREDIT: To All World Creators free Scripts & Tools
# Location: Made With LOVE IN ISRAEL !
# Source: https://github.com/Anlominus/HacKingPro
###############################################
clear

Press_ENTER=$(echo "\n\n${BYellow}                🔶    Press ENTER    🔶     ${BGreen}\n\n")
Press_Enter_To_START=$(echo "\n\n${BYellow}                🔶    Press Enter To START    🔶     ${BGreen}\n\n")

# Define Colors
HacKingProColors(){
##############################################################################
# COLORS AND BACKGROUNDS
##############################################################################
Color_Off='\033[0m' # Text Reset

# Regular Colors
Black='\033[0;30m'  # Black
Red='\033[0;31m'    # Red
Green='\033[0;32m'  # Green
Yellow='\033[0;33m' # Yellow
Blue='\033[0;34m'   # Blue
Purple='\033[0;35m' # Purple
Cyan='\033[0;36m'   # Cyan
White='\033[0;97m'  # White

# Additional colors
LGrey='\033[0;37m'   # Ligth Gray
DGrey='\033[0;90m'   # Dark Gray
LRed='\033[0;91m'    # Ligth Red
LGreen='\033[0;92m'  # Ligth Green
LYellow='\033[0;93m' # Ligth Yellow
LBlue='\033[0;94m'   # Ligth Blue
LPurple='\033[0;95m' # Light Purple
LCyan='\033[0;96m'   # Ligth Cyan


# Bold
BBlack='\033[1;30m'  # Black
BRed='\033[1;31m'    # Red
BGreen='\033[1;32m'  # Green
BYellow='\033[1;33m' # Yellow
BBlue='\033[1;34m'   # Blue
BPurple='\033[1;35m' # Purple
BCyan='\033[1;36m'   # Cyan
BWhite='\033[1;37m'  # White

# Underline
UBlack='\033[4;30m'  # Black
URed='\033[4;31m'    # Red
UGreen='\033[4;32m'  # Green
UYellow='\033[4;33m' # Yellow
UBlue='\033[4;34m'   # Blue
UPurple='\033[4;35m' # Purple
UCyan='\033[4;36m'   # Cyan
UWhite='\033[4;37m'  # White

# Background
On_Black='\033[40m'  # Black
On_Red='\033[41m'    # Red
On_Green='\033[42m'  # Green
On_Yellow='\033[43m' # Yellow
On_Blue='\033[44m'   # Blue
On_Purple='\033[45m' # Purple
On_Cyan='\033[46m'   # Cyan
On_White='\033[47m'  # White
}
HacKingProColors

# Logo Variable
HacKingProLogo1(){
  Anlominus="AnLoMinus"
  MyVersion="${BGreen}v1.3.0.4"
  HacKingProLogo_1="$(
  echo "${BBlue}
${BRed}          █████   █████                    ${BYellow}█████   ████  ███                      ${BBlue}███████████
${BRed}         ░░███   ░░███                    ${BYellow}░░███   ███░  ░░░   ${MyVersion}                   ${BBlue}░░███░░░░░███ ${Anlominus}
${BRed}          ░███    ░███   ██████    ██████  ${BYellow}░███  ███    ████  ████████    ███████ ${BBlue}░███    ░███ ████████   ██████
${BRed}          ░███████████  ░░░░░███  ███░░███ ${BYellow}░███████    ░░███ ░░███░░███  ███░░███ ${BBlue}░██████████ ░░███░░███ ███░░███
${BRed}          ░███░░░░░███   ███████ ░███ ░░░  ${BYellow}░███░░███    ░███  ░███ ░███ ░███ ░███ ${BBlue}░███░░░░░░   ░███ ░░░ ░███ ░███
${BRed}          ░███    ░███  ███░░███ ░███  ███ ${BYellow}░███ ░░███   ░███  ░███ ░███ ░███ ░███ ${BBlue}░███         ░███     ░███ ░███
${BRed}          █████   █████░░████████░░██████  ${BYellow}█████ ░░████ █████ ████ █████░░███████ ${BBlue}█████        █████    ░░██████
${BRed}         ░░░░░   ░░░░░  ░░░░░░░░  ░░░░░░  ${BYellow}░░░░░   ░░░░ ░░░░░ ░░░░ ░░░░░  ░░░░░███${BBlue}░░░░░        ░░░░░      ░░░░░░
${BYellow}                                                                         ███ ░███
${BYellow}                                                                        ░░██████
${BYellow}                                                                         ░░░░░░                              ")"
  echo "$HacKingProLogo_1"
}

# Checking For System Package Manager
Check_System() {
  # checking for system package manager
  if [ -e /data/data/com.termux/files/usr/bin/pkg ]; then
  pac="pkg"
  system="termux"
  elif [ `command -v brew` ]; then
    pac="brew"
    system="mac"
    sudo=""
  elif [ `command -v apt` ]; then
    pac="apt"
    system="linux"
  elif [ `command -v apt-get` ]; then
    pac="apt-get"
    system="linux"
  elif [ `command -v apk` ]; then
    pac="apk"
    system="linux"
  elif [ `command -v yum` ]; then
    pac="yum"
    system="fedora"
  fi

  # checking for system root access
  if [ `command -v sudo` ]; then
    sudo="sudo"
  else
    sudo=""
  fi

  # checking for system home dir
  if [ -d $HOME ]; then
    home=$HOME
  else
    home="~/"
  fi

  # checking for system bin dir
  if [ -d /data/data/com.termux/files/usr/bin ]; then
    bin="/data/data/com.termux/files/usr/bin"
  elif [ -d /usr/local/bin ]; then
    bin="/usr/local/bin"
  elif [ -d /bin ]; then
    bin="/bin"
  elif [ -d /sbin ]; then
    bin="/sbin"
  fi

}
Check_System

Arsenal(){
  clear
  # Getting Arsenal Cheatsheets
  if [[ -d $HOME/opt/anaconda3/bin/arsenal ]]; then
    #statements
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Arsenal Installed  \n"
    break
  else
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Creating Folder Arsenal \n"
    mkdir Arsenal
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${LYellow}Cloning Into [./Arsenal] \n"
    git clone https://github.com/Orange-Cyberdefense/Arsenal ./Arsenal
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}cd Into Arsenal\n"
    cd Arsenal
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}List Arsenal Directories \n"
    ls -lahs
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Installing Arsenal Requirements \n"
    python3 -m pip install -r requirements.txt
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Arsenal Run Installation  \n"
    ./run
    if [[ $? == 1 ]]; then
      #statements
      echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Arsenal Installation ${BRed} ERROR  \n"
    fi
    echo "\n\n"
    read -p "$Press_ENTER" ReaDone
  fi
  cd ..

}

MainMenu(){
  while true; do
  #statements
  clear
  HacKingProLogo1
  HacKingProMenuMain=$(echo "${BRed}
          ${BBlue}[${BRed}#${BBlue}] 📜 Menu
          ${BBlue}[${BRed}#${BBlue}] 📜 $bin

          ${BBlue}[${BRed}#${BBlue}] 🎯 ${LRed}Target IP${BBlue}: ${BRed}${targetIP}
          ${BBlue}[${BRed}#${BBlue}] 🎯 ${LRed}Target Name${BBlue}: ${BRed}${targetNAME}
          ${BBlue}[${BRed}#${BBlue}] 🎯 ${LRed}Target Email${BBlue}: ${BRed}${targetEmail}
          ${BBlue}[${BRed}#${BBlue}] 🎯 ${LRed}Target Phone${BBlue}: ${BRed}${targetPhone}
          ${BBlue}[${BRed}#${BBlue}] 🗓  ${LRed}Current Date${BBlue}: ${BRed} $(date)

          ${BRed}[${DGrey}I${BRed}]${BBlue} - ${DGrey}Install HacKingPro On the System
          ${BRed}[${DGrey}P${BRed}]${BBlue} - ${DGrey}Planning and Scoping

          ${BRed}[${DGrey}00${BRed}]${BBlue} - ${DGrey}Anonymity
          ${BRed}[${BBlack}01${BRed}]${BBlue} - ${BBlack}Information Gathering
          ${BRed}[${BBlack}02${BRed}]${BBlue} - ${BBlack}Reconnaissance & Vulnerability Assessment
          ${BRed}[${BBlack}03${BRed}]${BBlue} - ${BBlack}Web Application HacKing
          ${BRed}[${BBlack}04${BRed}]${BBlue} - ${BBlack}Database Assessment
          ${BRed}[${BBlack}05${BRed}]${BBlue} - ${BBlack}Password HacKing
          ${BRed}[${BBlack}06${BRed}]${BBlue} - ${BBlack}Wireless HacKing
          ${BRed}[${BBlack}07${BRed}]${BBlue} - ${BBlack}Reverse Engineering
          ${BRed}[${BBlack}08${BRed}]${BBlue} - ${BBlack}Exploit Frameworks & DataBases
          ${BRed}[${BBlack}09${BRed}]${BBlue} - ${BBlack}Sniffing - Spoofing
          ${BRed}[${BBlack}10${BRed}]${BBlue} - ${BBlack}Gaining & Maintaining Access
          ${BRed}[${BBlack}11${BRed}]${BBlue} - ${BBlack}Digital Forensic
          ${BRed}[${BBlack}12${BRed}]${BBlue} - ${BBlack}Analysis & Reporting
          ${BRed}[${BBlack}13${BRed}]${BBlue} - ${BBlack}Social Engineering
          ${BRed}[${BBlack}14${BRed}]${BBlue} - ${BBlack}Privilege Enumeration & Escalation
          ${BRed}[${BBlack}15${BRed}]${BBlue} - ${BBlack}Malware Analysis Labs/Tools
          ${BRed}[${BBlack}16${BRed}]${BBlue} - ${BBlack}Covering Tracks
          ${BRed}[${BBlack}CS${BRed}]${BBlue} - ${BBlack}Cheat Sheets

          ${BRed}[${LGrey}x${BRed}]${BWhite} -${DGrey} Exit / Quit / Close


${BCyan}            ┌──${BBlue}[${BBlue} Anlominus 👽${BRed} HacKingPro ${BCyan} ~$(pwd) ${BCyan}$~${BBlue}]
${BCyan}            └──╼ ")
    read -p "$HacKingProMenuMain" cmd
    case $cmd in
      p|P )
      clear
      echo "\n\t\t ${BRed}[${LGrey}P${BRed}]${BBlue} - ${LGrey}Planning and Scoping\n"
      #
      t1="$(echo "\n\t\t${BBlue}[${BRed}?${BBlue}]${BGreen} - IP / Host of Target / Client: ${BRed}")"
      read -p "$t1" targetIP
      if [ -z $targetIP ]; then
        #statements
        # targetIP="127.0.0.1"
        targetIP=" "
      fi

      #
      t2="$(echo "\n\t\t${BBlue}[${BRed}?${BBlue}]${BGreen} - Name of Target / Client: ${BRed}")"
      read -p "$t2" targetNAME
      if [ -z $targetNAME ]; then
        #statements
        targetNAME="ChangeMe"
        echo "\n\t\t${BRed}Target Name: ${BBlue} $targetNAME"
      fi

      #
      t3="$(echo "\n\t\t${BBlue}[${BRed}?${BBlue}]${BGreen} - Email of Target: ${BRed}")"
      read -p "$t3" targetEmail
      if [ -z $targetEmail ]; then
        #statements
        targetNAME="ChangeMe"
        echo "\n\t\t${BRed}Target Name: ${BBlue} $targetNAME"
      fi

      #
      t4="$(echo "\n\t\t${BBlue}[${BRed}?${BBlue}]${BGreen} - Phone of Target (With Country Code): ${BRed}")"
      read -p "$t4" targetPhone
      if [ -z $targetNAME ]; then
        #statements
        targetNAME="ChangeMe"
        echo "\n\t\t${BRed}Target Name: ${BBlue} $targetNAME"
      fi

      #
      file="${targetNAME}-HacKingPro-Log.md"
      if [ -e ${file} ]; then
        t5="$(echo "\n  ${BBlue}[${BRed}!${BBlue}] File Exist! Remove it? [yY/nN]: ")"
        read -p "$t5 " filexist
        case $filexist in
          y|Y)
          echo "  ${BBlue}[${BRed}!${BBlue}] Removing {${targetNAME}-HacKingPro-Log.md} file .."
          rm ${targetNAME}-HacKingPro-Log.md
          clear
          MainMenu
          ;;
          n|N)
          echo "  ${BBlue}[${BRed}!${BBlue}] Leaving {${targetNAME}-HacKingPro-Log.md} file and Add to it .."
          ;;
        esac
      fi

      ;;
      0|00 )
      clear
      Anonymity(){
        while true; do
        #statements
        clear
        HacKingProLogo1
        HacKingProMenuMain=$(
        echo "\n\t\t ${BRed}[${DGrey}00${BRed}]${BBlue} - ${DGrey}Anonymity"
        cd "Menu/00--Anonymity"
        echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] This is your Current Location \n\t\t ${BGreen}"
        pwd
        sleep 0.3
        echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] ls ${BYellow} 00--Anonymity \n\t\t ${BGreen}"
        ls
        sleep 0.3
        echo "${BYellow}"
        echo "${BRed}
                ${BBlue}[${BRed}#${BBlue}] 📜 Menu
                ${BBlue}[${BRed}#${BBlue}] 🗓 Date $(date)

                ${BRed}[${LGrey}01${BRed}]${BBlue} - ${DGrey}WhoAmI-Project
                ${BRed}[${LGrey}02${BRed}]${BBlue} - ${DGrey}Nullog
                ${BRed}[${LGrey}03${BRed}]${BBlue} - ${DGrey}MacChanger

                ${BRed}[${LGrey}x${BRed}]${BWhite} -${DGrey} Exit / Quit / Close

      ${BCyan}            ┌──${BBlue}[${BBlue} Anlominus 👽${BRed} Anonymity ${BCyan} ~$(pwd) ${BCyan}$~${BBlue}]
      ${BCyan}            └──╼ ")
          read -p "$HacKingProMenuMain" cmd
          case $cmd in
            1|01 )
            clear
            echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] cd kali-whoami \n\t\t ${BGreen}"
            pwd
            echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] ls kali-whoami \n\t\t ${BGreen}"
            ls
            cd WhoAmI-Project
            echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] Installing kali-whoami \n\t\t ${BGreen}"
            ls
            sleep 1
            sudo make install
            read -p "${Press_ENTER}" Som3T1ng
            echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] Checking Status \n\t\t ${BGreen}"
            sleep 1
            sudo bash kali-whoami --status
            read -p "${Press_ENTER}" Som3T1ng
            echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] Starting kali-whoami \n\t\t ${BGreen}"
            sleep 1
            sudo bash kali-whoami --start
            read -p "${Press_ENTER}" Som3T1ng
            cd ..
            ;;
            2|02 )
            clear
            echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] cd Nullog \n\t\t ${BGreen}"
            pwd
            cd Nullog
            echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] ls Nullog \n\t\t ${BGreen}"
            ls
            echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] Starting Nullog \n\t\t ${BGreen}"
            sh nullog.sh
            cd ..
            ;;
            3|03 )
            clear
            MacChanger
            ;;
            x|X|exit|EXIT )
            clear
            break
            ;;
        esac
      done
      }
      echo "\n\t\t ${BBlue}[${BRed}!${BBlue}] Starting ${BYellow} Anonymity \n\t\t ${BGreen}"
      read -p "$Press_Enter_To_START"
      Anonymity

      ;;
      1 )
      echo "\n\t\t${BRed}[${LGrey}01${BRed}]${BBlue} - ${DGrey}Information Gathering"
      # Page Header
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo "---" >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo "# Anlominus HacKingPro Report for $targetNAME " >> ${targetNAME}-HacKingPro-Log.md
      echo "#### Date: `date`" >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo "---" >> ${targetNAME}-HacKingPro-Log.md
      #  [1] - Planning and Scoping
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo "\n\t\t\t# [1] - Planning and Scoping "
      echo "# [1] - Planning and Scoping " >> ${targetNAME}-HacKingPro-Log.md
      echo "### Planning Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo "---" >> ${targetNAME}-HacKingPro-Log.md
      ;;
      2 )
      if [ -z $targetIP ]; then
        #statements
        echo "\n\t\t${BRed}[${BRed}X${BRed}]${BBlue} - ${BRed}Error; You need Enter IP Before Scanning; \n\t\t P On Keyboard and Come Back!!!"
        sleep 1
        MainMenu
      fi
      clear
      echo "\n\t\t${BRed}[${LGrey}02${BRed}]${BBlue} - ${DGrey}Vulnerability Assessment"
      #  [2] - Reconnaissance & Vulnerability Assessment
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo "# [2] - Reconnaissance & Vulnerability Assessment " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "\n\t\t${BGreen}### Arp Scan Log"
      echo "### Arp Scan Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " `arp -an` " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "\n\t\t${BGreen}### TraceRoute Scan Log"
      echo "### TraceRoute Scan Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " `traceroute $targetIP` " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "\n\t\t${BGreen}### Ping Scan Log"
      echo "### Ping Scan Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " `ping $targetIP -c4` " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "\n\t\t${BGreen}### Dig Scan Log"
      echo "### Dig Scan Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " `dig $targetIP all` " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "\n\t\t${BGreen}### Nslookup Scan Log"
      echo "### Nslookup Scan Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " `nslookup $targetIP` " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "\n\t\t${BGreen}### WhoIs Scan Log"
      echo "### WhoIs Scan Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " `whois $targetIP` " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "\n\t\t${BGreen}### Dirb Scan Log "
      echo "### Dirb Scan Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " `dirb http://$targetIP` " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "\n\t\t${BGreen}### Nmap Scan Log "
      echo "### Nmap Scan Log $targetIP: " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " `nmap -sV -sC -O $targetIP ` " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      #
      echo "---" >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      echo " " >> ${targetNAME}-HacKingPro-Log.md
      ;;
      3 )
      echo "\n\t\t${BRed}[${LGrey}03${BRed}]${BBlue} - ${DGrey}Web Application HacKing"
      ;;
      4 )
      echo "\n\t\t${BRed}[${LGrey}04${BRed}]${BBlue} - ${DGrey}Database Assessment"
      ;;
      5 )
      echo "\n\t\t${BRed}[${LGrey}05${BRed}]${BBlue} - ${DGrey}Password HacKing"
      ;;
      li|LI )
      clear
      echo "\n\t\t${BRed}[${LGrey}LI${BRed}]${BBlue} - ${DGrey}Local Info"
      echo "\n\t\t 🔸 ~ [ System info ] ~ 🔸\n"
      sleep 1
      echo "\n\t\t 🔸 ~ ${LBlue} Hostname: : ${BYellow} $(hostname)"
      sleep 1
      echo "\n\t\t 🔸 ~ ${LBlue} Distro: ${BYellow} $(uname)"
      sleep 1
      echo "\n\t\t 🔸 ~ ${LBlue} Kernel / Architecture: ${BYellow} $(uname -m)"
      sleep 1
      echo "\n\t\t 🔸 ~ ${LBlue} Machine Hardware Processor Architecture Name: ${BYellow} $(uname -p)"
      sleep 1
      echo "\n\t\t 🔸 ~ ${LBlue} Operating System Release: ${BYellow} $(uname -r)"
      sleep 1
      echo "\n\t\t 🔸 ~ ${LBlue} Operating System Name: ${BYellow} $(uname -s)"
      sleep 1
      echo "\n\t\t 🔸 ~ ${LBlue} Operating System Version: ${BYellow} $(uname -v)"
      sleep 1
      read -p "$Press_ENTER" Som3T1ng
       ;;
      i|I )
      echo "\n\t\t ${BRed}[${LGrey}I${BRed}]${BBlue} - ${BYellow}Installing HacKingPro On the System \n"
      sleep 1
      echo "\n\t\t ${BRed}[${LGrey}I${BRed}]${BBlue} - ${LYellow}Cloning Into [~/HacKingPro] \n"
      sleep 1
      git clone https://github.com/Anlominus/HacKingPro.git ~/HacKingPro
      echo "\n\t\t ${BRed}[${LGrey}I${BRed}]${BBlue} - ${LYellow}Copying Into [~${bin}/HacKingPro] \n"
      sleep 1
      sudo cp -vR ~/HacKingPro $bin/HacKingPro
      echo "\n\t\t ${BRed}[${LGrey}I${BRed}]${BBlue} - ${LYellow}Giving all Permission To [~${bin}/HacKingPro] \n"
      sleep 1
      sudo chmod 777 $bin/HacKingPro
      echo "\n\t\t ${BRed}[${LGrey}I${BRed}]${BBlue} - ${LGreen}Successfully Installed \n"
      sleep 1
      echo "\n\t\t ${BRed}[${LGrey}I${BRed}]${BBlue} - ${BGreen}Open New Terminal And type [:~> HacKingPro ]  \n"
      sleep 1
      echo " "
      read -p " Press Enter To Close: " finished
      exit
      ;;
      cs|CS )
      Arsenal
      ;;
      x )
      clear
      HacKingPro=$(echo "${BRed}Hac${BYellow}King${BBlue}Pro")
      echo "\n\t\t ${BRed}[🙏🏼${BRed}] ${BWhite}Exit ${HacKingPro} ${BRed}[🙏🏼${BRed}]\n\t\t ${BGreen}"
      exit
      ;;
    esac
  done
}
MainMenu

# RUN Functions
