#!/bin/sh
#!/bin/bash
#!/usr/bin/sh
#!/usr/bin/bash
#!/usr/bin/env sh
#!/usr/bin/env bash
#!/data/data/com.termux/files/usr/bin/sh
#!/data/data/com.termux/files/usr/bin/bash
###############################################################
#-Info--------------------------------------------------------#
#    Enter Your Target, Hack Him, and Get Markdown Report     #
#-About-------------------------------------------------------#
#--‚ïº‚ñ∞[ Skils ]-‚ïº‚ñ∞[ MultiMan ]                                 #
#--‚ïº‚ñ∞[ Author ]-‚ïº‚ñ∞ [ Leon Yaakobov ]-‚ïº‚ñ∞ [ AnLoMinus ]         #
#--‚ïº‚ñ∞[ Script Name ]-‚ïº‚ñ∞[ HacKingPro ]                         #
###############################################################
#-Metadata----------------------------------------------------#
#--‚ïº‚ñ∞[ Source ]-‚ïº‚ñ∞[ https://github.com/AnLoMinus/HacKingPro ] #
#--‚ïº‚ñ∞[ Update ]-‚ïº‚ñ∞[ 30-10-2022 ]                              #
#--‚ïº‚ñ∞[ Created ]-‚ïº‚ñ∞[ 2022 ]                                   #
#--‚ïº‚ñ∞[ Version ]-‚ïº‚ñ∞[ 1.8.0 ]                                  #
###############################################################
#-Operating System--------------------------------------------#
#--‚ïº‚ñ∞[ Kali ]-‚ïº‚ñ∞ [ ‚åõÔ∏è ]                                       #
#--‚ïº‚ñ∞[ MacOS ]-‚ïº‚ñ∞ [ ‚úÖ ]                                      #
#--‚ïº‚ñ∞[ Parrot ]-‚ïº‚ñ∞ [ ‚åõÔ∏è ]                                     #
#--‚ïº‚ñ∞[ Pentoo ]-‚ïº‚ñ∞ [ ‚åõÔ∏è ]                                     #
#--‚ïº‚ñ∞[ Windows ]-‚ïº‚ñ∞ [ ‚åõÔ∏è ]                                    #
#--‚ïº‚ñ∞[ Predator ]-‚ïº‚ñ∞ [ ‚åõÔ∏è ]                                   #
#-ToDO--------------------------------------------------------#
#  ‚îè‚îÅ‚î≥‚îÅ‚îì
# ‚ïæ‚îÉ 1 ‚îÉ‚ïº [Menu] - Offensive Protecting [Red-Menu]
# ‚ïæ‚îÉ 2 ‚îÉ‚ïº [Menu] - Defensive Protecting [Blue-Menu]
# ‚ïæ‚îó‚îÅ‚îª‚îÅ‚îõ‚ïº
#
# The Hacking Methodology - contains the following progressive steps:
# 1. Information Gathering
# 2. Penetration
# 3. Optional: Guaranteeing Future Easier Access
# 4. Internal Reconnaissance
# 5. Optional: Movement
# 6. Intended Action Execution
# 7. Optional: Covering Tracks
#
###############################################
#------‚ïº‚ïº‚ñ∞[ Granting Permissons ]-‚ïº‚ñ∞[ HacKingPro ]-‚ïº‚ñ∞[  ]
clear
chmod 777 HacKingPro
cp "$0" ~/HacKingPro
chmod a=rwx ~/HacKingPro
chmod a=rwx HacKingPro-Parts/Menu/*/*
# chmod a=rwx HacKingPro-Parts/Plugins/*
###############################################
#------‚ïº‚ïº‚ñ∞[ Import ]-‚ïº‚ñ∞[ Parts ]-‚ïº‚ñ∞[ Main ]
# . HacKingPro-Parts/
#------‚ïº‚ïº‚ñ∞[ Import ]-‚ïº‚ñ∞[ Parts ]-‚ïº‚ñ∞[ Plugins ]
. HacKingPro-Parts/Main/HacKingPro-Colors
. HacKingPro-Parts/Main/HacKingPro-Directories
. HacKingPro-Parts/Main/HacKingPro-Awesomes
. HacKingPro-Parts/Main/HacKingPro-ChecKing
. HacKingPro-Parts/Main/HacKingPro-Planning
. HacKingPro-Parts/Main/HacKingPro-Reports
. HacKingPro-Parts/Main/HacKingPro-NetWorKing
. HacKingPro-Parts/Main/HacKingPro-Status
# . Menu/AnLoMinus/AnLoMinus-KoTH-Pro
HacKingPro=$(echo "${BRed}Hac${BYellow}King${BBlue}Pro$resetT")
#------‚ïº‚ïº‚ñ∞[ Import ]-‚ïº‚ñ∞[ Parts ]-‚ïº‚ñ∞[ Menu ]
. HacKingPro-Parts/Menu/00/HacKingPro-00
. HacKingPro-Parts/Menu/01/HacKingPro-01
. HacKingPro-Parts/Menu/02/HacKingPro-02
# . HacKingPro-Parts/Menu/03/HacKingPro-03
# . HacKingPro-Parts/Menu/04/HacKingPro-04
# . HacKingPro-Parts/Menu/05/HacKingPro-05
# . HacKingPro-Parts/Menu/06/HacKingPro-06
# . HacKingPro-Parts/Menu/07/HacKingPro-07

##########################################################
#‚ïæ‚î£‚îÅ‚ïã‚îÅ‚îÅ-‚ïº‚ñ∞[ About ]--‚ïº‚ñ∞ [ AnLoMinus ]--‚ïº‚ñ∞ [ HacKingPro ] #
##########################################################

###################################
#------‚ïº‚ïº‚ñ∞[ Variables ]-‚ïº‚ñ∞[ Head] #
###################################
#--‚ïº‚ñ∞[ Variable ]-‚ïº‚ñ∞ [ Set Parameters ]
g1="${1}" # Parameter -> Name
g2="${2}" # Parameter -> IP
g3="${3}" # Parameter -> DNS | if DNS exist, i try resolve his IP and Automatic set it as a TargetIP
g4="${4}" # Parameter -> Email
g5="${5}" # Parameter -> Phone
##################################
#------‚ïº‚ïº‚ñ∞[ Variables ]-‚ïº‚ñ∞[ End] #
##################################
targetNAME="${g1}"
targetIP="${g2}"
targetDns="${g3}"
targetEmail="${g4}"
targetPhone="${g5}"

#--‚ïº[ ChecKing ]--‚ïº‚ñ∞ [ If ]--‚ïº‚ñ∞ [ Parameters is = 0 ]
if [ "$#" -eq 0 ]; then
  echo " "
  MiniHeaderSta "${LRed} ‚ùå you did not pass any parameter ‚ùå"
  echo "${ORANGE}    |‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ My name is ${BGreen}${HacKingPro}${resetT}"
  echo "${ORANGE}    |‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ I was called with ${BGreen}$#${resetT}${ORANGE} Parameters"
  MiniHeaderEnd "${LRed} ‚ùå you did not pass any parameter ‚ùå"
fi
#--‚ïº[ ChecKing ]--‚ïº‚ñ∞ [ If ]--‚ïº‚ñ∞ [ Parameters is not = 0 ]
# if [ "$#" -ne 0 ]; then
#   #--‚ïº[ ChecKing ]--‚ïº‚ñ∞ [ 01 ]--‚ïº‚ñ∞ [ Name Parameters ]
#   if [ -z ${g1}  ]; then
#     # IF NO TARGET SET AnLoMinus
#     if [ -z "$targetNAME" ]; then
#       # setting target name
#       targetNAME="AnLoMinus"
#     fi
#   else
#     # setting target name
#     targetNAME="${g1}"
#   fi
#   #--‚ïº[ ChecKing ]--‚ïº‚ñ∞ [ 02 ]--‚ïº‚ñ∞ [ IP Parameters ]
#   if [ -z ${g2}  ]; then
#     # IF NO TARGET SET AnLoMinus
#     if [ -z "$targetIP" ]; then
#       # setting target name
#       targetIP=""
#     fi
#   else
#     # setting target name
#     targetIP="${g2}"
#   fi
#   #--‚ïº[ ChecKing ]--‚ïº‚ñ∞ [ 03 ]--‚ïº‚ñ∞ [ Dns Parameters ]
#   if [ -z ${g3}  ]; then
#     if [ ! -z "$targetDns" ]; then
#       #statements
#       GetIP="$(ping -c 1 "${targetDns}" | grep ttl | cut -d " " -f4 |  tr  -d :)"
#       targetIP="${GetIP}"
#     else
#       targetDns="xXx.AnLoMinus.xXx"
#     fi
#     if [ -z "$targetDns" ]; then
#       # setting target name
#       targetDns=""
#     fi
#     if [ ! -z ${targetDns} ]; then
#       #statements
#       GetIP="$(ping -c 1 "${targetDns}" | grep ttl | cut -d " " -f4 |  tr  -d :)"
#       targetIP="${GetIP}"
#     fi
#   else
#     # setting target name
#     targetDns="${g3}"
#     GetIP="$(ping -c 1 "${targetDns}" | grep ttl | cut -d " " -f4 |  tr  -d :)"
#     targetIP="${GetIP}"
#   fi
#   #--‚ïº[ ChecKing ]--‚ïº‚ñ∞ [ 04 ]--‚ïº‚ñ∞ [ Email Parameters ]
#   if [ -z ${g4}  ]; then
#     # IF NO TARGET SET AnLoMinus
#     if [ -z "$targetEmail" ]; then
#       # setting target name
#       targetEmail=""
#     fi
#   else
#     # setting target name
#     targetEmail="${g4}"
#   fi
#   #--‚ïº[ ChecKing ]--‚ïº‚ñ∞ [ 05 ]--‚ïº‚ñ∞ [ Phone Parameters ]
#   if [ -z ${g5}  ]; then
#     # IF NO TARGET SET AnLoMinus
#     if [ -z "$targetPhone" ]; then
#       # setting target name
#       targetPhone=""
#     fi
#   else
#     # setting target name
#     targetPhone="${g5}"
#   fi
#   ReportPlanning
# fi
MainDirectories

######################################
#------‚ïº‚ïº‚ñ∞[ Variables ]--‚ïº‚ñ∞ [ Head ] #
######################################
#--‚ïº‚ñ∞ [ About ]
LastUPDATE(){
  echo "30 October 2022"
}
ToolSource(){
  echo "https://github.com/AnLoMinus/HacKingPro"
}
AnLoMinus(){
  echo "${BGreen}An${DGrey}Lo${BRed}Minus"
}
MyVersion(){
  echo "${DGrey}V1.8.0" # 30-10-2022
}
#‚ïº‚ïº‚ñ∞[ Variables ]--‚ïº‚ñ∞ [ User Interface ]
Press_ENTER(){
  printf "\n\n${BYellow}                üî∂    Press ENTER    üî∂     ${BGreen}\n\n"
  read cmd
}
Press_Enter_To_START=$(echo "\n\n${BYellow}                üî∂    Press Enter To START    üî∂     ${BGreen}\n\n")
InvalidOption=$(echo "\n\t\t ${BGreen}¬ª¬ª¬ª ${HacKingPro} ${LRed}Invalid Option ${BRed}¬Ø\_(„ÉÑ)_/¬Ø \n")
#‚ïº‚ïº‚ñ∞[ Variables ]--‚ïº‚ñ∞ [ Date ]
year=$(date +%Y)
month=$(date +%m)
day=$(date +%d)
hour=$(date +%H)
minute=$(date +%M)
second=$(date +%S)
DMY=$(date +%d-%m-%y)
CurrentDate=$(echo "${DGrey}$day-$month-$year")
StartingTime=$(echo "${DGrey}$hour:$minute:$second")
#‚ïº‚ïº‚ñ∞[ HacKingPro ]--‚ïº‚ñ∞ [ Logo ]--‚ïº‚ñ∞  [ Variables ]
HacKingProLogo(){
  echo "${BBlue}
${BRed}     ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà                    ${BYellow}‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà                      ${BBlue}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
${BRed}    ‚ñë‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà                    ${BYellow}‚ñë‚ñë‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñë  ‚ñë‚ñë‚ñë   $(MyVersion)           ${BBlue}‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà $(AnLoMinus)
${BRed}     ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ${BYellow}‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ${BBlue}‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
${BRed}     ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ${BYellow}‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ${BBlue}‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà
${BRed}     ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñë  ${BYellow}‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ${BBlue}‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñë ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà
${BRed}     ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà ${BYellow}‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ${BBlue}‚ñë‚ñà‚ñà‚ñà         ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà
${BRed}     ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ${BYellow}‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ${BBlue}‚ñà‚ñà‚ñà‚ñà‚ñà        ‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
${BRed}    ‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ${BYellow}‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà${BBlue}‚ñë‚ñë‚ñë‚ñë‚ñë        ‚ñë‚ñë‚ñë‚ñë‚ñë      ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë
${BYellow}                                                                    ‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà
${BYellow}                                                                   ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
${BYellow}                                                                    ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë                              "
}
#‚ïº‚ïº‚ñ∞[ HacKingPro ]--‚ïº‚ñ∞ [ lahs ]--‚ïº‚ñ∞ [ ls -lahs ]
lahs(){
  AwesomeAsking "[ ls | nano ] ?"
  AwesomeLine "Listing Fils in Curret Directory"
  ls -lahs "$1"
  AwesomeLine "Listing Fils in Curret Directory"
  read -p "$ls_lahs"
}
#####################################
#------‚ïº‚ïº‚ñ∞[ Variables ]--‚ïº‚ñ∞ [ End ] #
#####################################
xDirectories
#-‚ïº‚ñ∞[ HacKingPro ]-‚ïº‚ñ∞‚ñ∞[ Status ]-‚ïº‚ñ∞‚ñ∞  [ Header ]
ToolHeaderRun(){
  ToolHeader=$(echo "
    ${BGreen}${faintT}‚îå‚îÄ‚îÄ‚ïº ${resetT}${BRed}[${BCyan}${faintT} Version${resetT} ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${resetT}${BGreen}‚ñ∞${resetT} ${BRed}[${BCyan} $(MyVersion) ${BRed}]
    ${BGreen}${faintT}|‚îÄ‚îÄ‚ïº ${resetT}${BRed}[${BCyan}${faintT} Aouther${resetT} ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${resetT}${BGreen}‚ñ∞${resetT} ${BRed}[${BCyan} $(AnLoMinus) ${BRed}]
    ${BGreen}${faintT}|‚îÄ‚îÄ‚ïº ${resetT}${BRed}[${BCyan}${faintT} Tool Name${resetT} ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ${resetT}${BGreen}‚ñ∞${resetT} ${BRed}[${BCyan} $boldT$slowBlink${HacKingPro}$resetT ${BRed}]
    ${BGreen}${faintT}|‚îÄ‚îÄ‚ïº ${resetT}${BRed}[${BCyan}${faintT} Last Update${resetT} ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ${resetT}${BGreen}‚ñ∞${resetT} ${BRed}[${BCyan} $(LastUPDATE) ${BRed}]
    ${BGreen}${faintT}|‚îÄ‚îÄ‚ïº ${resetT}${BRed}[${BCyan}${faintT} Current PID${resetT} ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ${resetT}${BGreen}‚ñ∞${resetT} ${BRed}[${BCyan} $(echo "$$") ${BRed}]
    ${BGreen}${faintT}‚îî‚îÄ‚îÄ‚ïº ${resetT}${BRed}[${BCyan}${faintT} Source${resetT} ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${resetT}${BGreen}‚ñ∞${resetT} ${BRed}[${DGrey} $(ToolSource) ${BRed}]")
  echo "$ToolHeader"
}
#-‚ïº‚ñ∞[ HacKingPro ]-‚ïº‚ñ∞‚ñ∞ [ Status ]-‚ïº‚ñ∞‚ñ∞ [ Target ]-‚ïº‚ñ∞‚ñ∞
TargetStatus(){
  echo "
    ${ORANGE}${faintT}‚îå‚îÄ‚îÄ‚ïº${resetT}${BBlue}‚î§${ORANGE} Target Status ${BBlue}‚îú${ORANGE}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº${resetT}${BCyan}‚ñ∞‚ñ∞‚ñ∞
    ${ORANGE}${faintT}‚îÇ
    ${ORANGE}${faintT}|‚îÄ‚îÄ‚ïº${resetT}${ORANGE} ‚óà ${BRed}[${DGrey}$(FunTargetIP)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${LRed}${faintT}IP${BBlue}: ${BGreen}${targetIP}
    ${ORANGE}${faintT}|‚îÄ‚îÄ‚ïº${resetT}${ORANGE} ‚óà ${BRed}[${DGrey}$(FunTargetDns)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${LRed}${faintT}Dns${BBlue}: ${BGreen}${targetDns}
    ${ORANGE}${faintT}|‚îÄ‚îÄ‚ïº${resetT}${ORANGE} ‚óà ${BRed}[${DGrey}$(FunTargetName)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${LRed}${faintT}Name${BBlue}: ${BGreen}${targetNAME}
    ${ORANGE}${faintT}|‚îÄ‚îÄ‚ïº${resetT}${ORANGE} ‚óà ${BRed}[${DGrey}$(FunTargetEmail)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${LRed}${faintT}Email${BBlue}: ${BGreen}${targetEmail}
    ${ORANGE}${faintT}|‚îÄ‚îÄ‚ïº${resetT}${ORANGE} ‚óà ${BRed}[${DGrey}$(FunTargetPhone)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${LRed}${faintT}Phone${BBlue}: ${BGreen}${targetPhone}
    ${ORANGE}${faintT}‚îÇ
    ${ORANGE}${faintT}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº${resetT}${BCyan}‚ñ∞‚ñ∞‚ñ∞
"
}
#-‚ïº‚ñ∞[ HacKingPro ]-‚ïº‚ñ∞‚ñ∞ [ Status ]-‚ïº‚ñ∞‚ñ∞ [ Target ]-‚ïº‚ñ∞‚ñ∞ ‚ïº‚ñ∞‚ñ∞ [ Running ]
TargetStatusRun(){
  ToolStatus=$(echo "
    ${InternetStatus}
    ${BCyan}${faintT}‚îå‚îÄ‚îÄ${resetT}${BRed}[${BCyan} ${slowBlink}P${resetT} ${BRed}]${faintT}${BCyan}‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞ ${BRed}[${faintT}${BCyan} ‚ö°Ô∏è Planning and Scoping üéØ ${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº${resetT}${BCyan}‚ñ∞‚ñ∞‚ñ∞
    ${BCyan}${faintT}|
    ${BCyan}${faintT}|‚îÄ‚îÄ${resetT}${BRed}[${DGrey} Full Time ${BRed}]${faintT}${BCyan}‚îÄ‚îÄ‚ïº${resetT} ${BRed}[${DGrey} $(date) ${BRed}]
    ${BCyan}${faintT}|‚îÄ‚îÄ${resetT}${BRed}[${DGrey} Current Date ${BRed}]${faintT}${BCyan}‚îÄ‚îÄ‚ïº${resetT} ${BRed}[${DGrey} ${CurrentDate} ${BRed}]
    ${BCyan}${faintT}|‚îÄ‚îÄ${resetT}${BRed}[${DGrey} Starting Time ${BRed}]${faintT}${BCyan}‚îÄ‚îÄ‚ïº${resetT} ${BRed}[${DGrey} ${StartingTime} ${BRed}]
    ${BCyan}${faintT}|
    ${BCyan}${faintT}|‚îÄ‚îÄ${resetT}${BRed}[ üéØ ]${BCyan}${faintT}‚îÄ‚îÄ${resetT}${BRed}[${DGrey}$(FunTargetIP)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${DGrey}[${BGreen}${slowBlink} IP ${resetT}${DGrey}]${BYellow}${faintT}‚îÄ‚ïº${resetT}${LGreen}‚ñ∞‚ñ∞‚ñ∞  ${DGrey}[ ${BGreen}${targetIP} ${DGrey}]
    ${BCyan}${faintT}|‚îÄ‚îÄ${resetT}${BRed}[ üéØ ]${BCyan}${faintT}‚îÄ‚îÄ${resetT}${BRed}[${DGrey}$(FunTargetDns)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${DGrey}[${BGreen}${slowBlink} Dns ${resetT}${DGrey}]${BYellow}${faintT}‚îÄ‚ïº${resetT}${LGreen}‚ñ∞‚ñ∞‚ñ∞  ${DGrey}[ ${BGreen}${targetDns} ${DGrey}]
    ${BCyan}${faintT}|‚îÄ‚îÄ${resetT}${BRed}[ üéØ ]${BCyan}${faintT}‚îÄ‚îÄ${resetT}${BRed}[${DGrey}$(FunTargetName)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${DGrey}[${BGreen}${slowBlink} Name ${resetT}${DGrey}]${BYellow}${faintT}‚îÄ‚ïº${resetT}${LGreen}‚ñ∞‚ñ∞‚ñ∞  ${DGrey}[ ${BGreen}${targetNAME} ${DGrey}]
    ${BCyan}${faintT}|‚îÄ‚îÄ${resetT}${BRed}[ üéØ ]${BCyan}${faintT}‚îÄ‚îÄ${resetT}${BRed}[${DGrey}$(FunTargetEmail)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${DGrey}[${BGreen}${slowBlink} Email ${resetT}${DGrey}]${BYellow}${faintT}‚îÄ‚ïº${resetT}${LGreen}‚ñ∞‚ñ∞‚ñ∞  ${DGrey}[ ${BGreen}${targetEmail} ${DGrey}]
    ${BCyan}${faintT}|‚îÄ‚îÄ${resetT}${BRed}[ üéØ ]${BCyan}${faintT}‚îÄ‚îÄ${resetT}${BRed}[${DGrey}$(FunTargetPhone)${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚ïº  ${DGrey}[${BGreen}${slowBlink} Phone ${resetT}${DGrey}]${BYellow}${faintT}‚îÄ‚ïº${resetT}${LGreen}‚ñ∞‚ñ∞‚ñ∞  ${DGrey}[ ${BGreen}${targetPhone} ${DGrey}]
    ${BCyan}${faintT}|
    ${BCyan}${faintT}‚îî‚îÄ‚îÄ${resetT}${BRed}[${BCyan} CL ${BRed}]${faintT}${BCyan}‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞ ${BRed}[${faintT}${BCyan} üßπ Cleaning Target Variables  üßπ ${BRed}]${BCyan}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº${resetT}${BCyan}‚ñ∞‚ñ∞‚ñ∞
    ")
    echo "$ToolStatus"
}

about() {
  clear
  # HacKingProLogo1
  echo "${BBlue}
                              .
                          ..',,'..
                        .',,,,,,,,,.
                       .',,,'..',,,,'.
                      .',,'.     .,,,'
                     .',,.        .,,,.
                    .',..           .,,.
                    .'.              ..,.
                    .                  .'
                   ..   ${ORANGE}  A‡∏†l‡πèmi‡∏†u‡∫Æ    .
                   ..                   .
                   ..                  ...
            ....''''.    ${HacKingPro}${BGreen}    .','''....
          .',,,,,,,,'..               ..',,,,,,,,'.
         ...'',,,,,,,'...          ....',,,,,,,,'...
        ....'',;;;;;;;,,'''......'''',,;;;;;;;,'''...
       ......'',,;;;:::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/:'.
       .....'.'',,;;::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/'....
       .......',,;;::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/,......
       .'''''',,;;::/xxxxxxxxxx${BCyan}DAT0S${BGreen}xxxxxxxxxxxx/,.......
      ..'''',',;;::/xxxxxxxxx${BBlue}4NL0M1NU2${BGreen}xxxxxxxxx/,'''''...
     ........';;::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/:'.........
    ......  .':::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/::'..  ......
    ......:.;:::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/::;'c,':......
     .''..cc.''''''',,,,,,,;;;;;,,,,,,,,''''....:.cc..''."

         AwesomeLine "Welcome to ${HacKingPro}"
         ToolHeaderRun
         AwesomeLine "Welcome to ${HacKingPro}"

  echo "
    ${DGrey}‚îè‚îÄ‚îÄ‚á¢ ${BRed}[${LRed} ${HacKingPro} ${Color_Off}is a Penetration Testing Tool ‚ùï‚ùï‚ùï ${BRed}]
    ${DGrey}‚î£‚îÄ‚îÄ‚á¢ ${BRed}[${LRed} ${HacKingPro} ${Color_Off}Written by ${BCyan}Leon Yaakobov ${Color_Off}For Showing Skills ${BRed}]
    ${DGrey}‚îó‚îÄ‚îÄ‚á¢ ${BRed}[${LRed} ${HacKingPro} ${Color_Off}Tool for ${BRed}Red Teams ${BBlue} Blue Teams ${BRed}]

    ${DGrey}‚îè==‚•§ ${Color_Off}[${LRed} ‚ùå ‚ùó ‚ò£Ô∏è Warning ‚ò£Ô∏è ‚ùó ‚ùå ${Color_Off}]
    ${DGrey}|
    ${DGrey}‚î£==‚•§ ${Color_Off}[${LRed} ‚ùó I‚Äôm not responsible for any misuse or damage caused by this program.‚ùó ${Color_Off}]
    ${DGrey}|
    ${DGrey}‚îó==‚•§ ${Color_Off}[${LRed} ‚ùó Use this tool at your own ${BRed}Risk ‚ùó${Color_Off}]

    ${DGrey}‚îå‚îÄ‚îÄ${BRed}[${DGrey} AnyTool ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${DGrey} Many Systems HacKing Tools Downloader ${HacKingPro} ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} About ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${DGrey} Information About The ${HacKingPro} Tool ${BRed}]"

   # Press_ENTER

   if [[ $SystemArchitecture == "darwin-amd64" ]]; then
     #statements
     open -u http://github.com/AnLoMinus/HacKingPro
   fi

}

if [[ $1 == "help" ]]; then
  #statements
  echo " Help Center"
  about
  read; exit;
fi
######################################
#------‚ïº‚ïº‚ñ∞[ Main Menu ]--‚ïº‚ñ∞ [ Head ] #
######################################
#-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0#
#-0-------START Checking---------0-#
#-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0#
ReportPlanning
clear
Check_System
AwesomeWarning
AwesomeAskingWarning "Want start anyway?"
clear
AwesomeLine "Welcome to ${HacKingPro}"
ToolHeaderRun
if [ "$#" -eq 0 ]; then
  echo " "
  MiniHeaderSta "${LRed} ‚ùå you did not pass any parameter ‚ùå"
  echo "${ORANGE}    |‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ My name is ${BGreen}${HacKingPro}${resetT}"
  echo "${ORANGE}    |‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ I was called with ${BGreen}$#${resetT}${ORANGE} parameters"
  MiniHeaderEnd "${LRed} ‚ùå you did not pass any parameter ‚ùå"
else
  AwesomeParameters
fi
AwesomeLine "Welcome to ${HacKingPro}"

Press_ENTER
#-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-#
#-0-------END Checking--------0-#
#-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-#

HackTypePro(){
  while true; do
    clear
    ToolHeaderRun
    TargetStatusRun
    echo "
    [ BB ]--[ Black Box ] - Done without any knowledge of the system or network.
    [ WB ]--[ White Box ] - When the attacker have complete knowledge of the system provided by the owner/target.
    [ GB ]--[ Gray Box ] - When the attacker has some knowledge of the system and/or network "
    case $cmd in
    "bb" | "BB" | "Black Box" ) clear ;;
    "wb" | "WB" | "White Box" ) clear ;;
    "gb" | "GB" | "Gray Box" ) clear ;;
    esac
  done
}
#--‚ïº[ Main Menu ]
MainMenu(){
  while true; do
    clear
    MainDirectories
    cd "${MainDirectoriy}"
    ToolHeaderRun
    TargetStatusRun
    HacKingProMenuMain=$(echo "${BRed}
    ${BYellow}${faintT}‚îå‚îÄ‚îÄ${resetT}${BRed}[${BYellow} ${HacKingPro} ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº${resetT}${BYellow}‚ñ∞‚ñ∞‚ñ∞
    ${BYellow}${faintT}|
    ${BYellow}${faintT}|‚îÄ‚îÄ‚î≤‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${BYellow} 0 ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${BYellow} Anonymity ${BRed}]
    ${BYellow}${faintT}|  ‚îñ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Anonymity ${BRed}]
    ${BYellow}${faintT}|
    ${BYellow}${faintT}|‚îÄ‚îÄ‚î≤‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${BYellow} 1 ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${BYellow} Reconnaissance & Information Gathering ${BRed}]
    ${BYellow}${faintT}|  ‚îñ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Get Information about the Target Organization ${BRed}]
    ${DGrey}${faintT}|
    ${DGrey}${faintT}|‚îÄ‚îÄ‚î≤‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} 2 ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} Weaponization ${BRed}]
    ${DGrey}${faintT}|  ‚îñ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${DGrey} Create Malicious Program or Exploits ${BRed}]
    ${DGrey}${faintT}|
    ${DGrey}${faintT}|‚îÄ‚îÄ‚î≤‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} 3 ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} Delivery ${BRed}]
    ${DGrey}${faintT}|  ‚îñ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${DGrey} Send Weaponized Program to Target ${BRed}]
    ${DGrey}${faintT}|
    ${DGrey}${faintT}|‚îÄ‚îÄ‚î≤‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} 4 ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} Exploitation ${BRed}]
    ${DGrey}${faintT}|  ‚îñ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${DGrey} Start Weaponized Program Attacks the Target ${BRed}]
    ${DGrey}${faintT}|
    ${DGrey}${faintT}|‚îÄ‚îÄ‚î≤‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} 5 ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} Installation ${BRed}]
    ${DGrey}${faintT}|  ‚îñ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${DGrey} Install Malware on the Target System, Which Allows Control Remotely ${BRed}]
    ${DGrey}${faintT}|
    ${DGrey}${faintT}|‚îÄ‚îÄ‚î≤‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} 6 ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${DGrey} Command and Control ${BRed}]
    ${DGrey}${faintT}|  ‚îñ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${DGrey} Use Malware to take control of Target System ${BRed}]
    ${BYellow}${faintT}|
    ${BYellow}${faintT}|‚îÄ‚îÄ‚î≤‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${BYellow} 7 ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${resetT}${BRed}[${BYellow} Actions on Objective ${BRed}]
    ${BYellow}${faintT}|  ‚îñ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Destruction ${BRed}]
    ${BYellow}${faintT}|
    ${BYellow}${faintT}‚îî‚îÄ‚îÄ${resetT}${BRed}[${DGrey} X ${BRed}]${BYellow}${faintT}‚îÄ‚îÄ‚ïº ${resetT}${BRed}[${DGrey} Exit / Quit / Close ${BRed}]

    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${ORANGE} Arsenal ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} $ArsenalCommand ${BRed}]${BGreen}${resetT}
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${BRed}[${BGreen} üîÆ ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${BGreen}   ")
    read -p "$HacKingProMenuMain" cmd
    case $cmd in
      qqqq )
      HKP_HTML_Export
      read -p "done ! "
      open ${targetNAME}_HKP_REPORT.html
      ;;
      lpi|lpic|Linux+ ) . HacKingPro-Parts/Linux/LinuxPlusPro ; _LinuxPlusProMenu;;
      KoTHPro)
      AnLoMinus_Main_Menu
      ;;
      report )
      ReportPlanning
      ;;
      "?"|help|about|About )
      about
      Press_ENTER
      ;;
      00|0 )
      Anonymity(){
        while true; do
          clear
          ToolHeaderRun
          TargetStatusRun
          HacKingProMenuMain=$(echo "${BRed}
    ${DGrey}[0]‚îÄ‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞ ${BRed}[${DGrey} Anonimity ${BRed}]

    ${DGrey}‚îå‚îÄ‚îÄ${BRed}[${LGreen} NetWorKing ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${BGreen}${slowBlink} NetPro ${resetT}${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} NetWorKingPro ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen}${faintT} NetWorKing Controller ${resetT}${BRed}]

    ${DGrey}‚îå‚îÄ‚îÄ${BRed}[${BWhite} 00 ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BWhite} Installer ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BWhite} Installing Anonymous Tools ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${BWhite} 01 ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BWhite} Cover Me ${BRed}]${BGreen}‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BWhite} Clean Logs & History${BRed}]

    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ${resetT}${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Anonymity ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}   ")
          read -p "$HacKingProMenuMain" cmd
          case $cmd in
            p|P )
            HacKingProPlanning
            ReportPlanning
            ;;
            ls )
            lahs
            ;;
            0|00 )
            clear
            echo ${faintT}
            AnonymousInstaller
            Press_ENTER
            ;;
            1|01 )
            clear
            CoverMe
            Press_ENTER
            ;;
            nt|NT|netpro|NetPro)
            Info_LocalNet
            while true; do
              clear
              ToolHeaderRun
              TargetStatusRun
              #statements
              NetWorKingPro
            done
            ;;
            x|X|exit|EXIT )
            cd ${MainDirectoriy}
            clear
            AwesomeLineExit
            break
            ;;
        esac
      done
      }
      Anonymity
      ;;
      01|1 )
      # Page Header
      while true; do
        #statements
        clear
        # cd "$x_Menu_1"
        ToolHeaderRun
        TargetStatusRun
        HacKingProMenuMain=$(echo "${BRed}
    ${DGrey}‚îå‚îÄ‚îÄ‚î≤‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Reconnaissance & Information Gathering ${BRed}]
    ${DGrey}|  ‚îñ‚îÄ‚î≤‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Intruder picks a target, researches it, and looks for vulnerabilities ${BRed}]
    ${DGrey}|    ‚îñ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Intruder selects target, researches it, and attempts to identify vulnerabilities in the target network. ${BRed}]
    ${DGrey}|
    ${DGrey}| ‚îè‚îÄ‚îÄ‚îÄ‚ïº‚ñ∞ ${BRed}[${BYellow} CPI ${BRed}]${BGreen}‚ïº‚ïº‚ñ∞‚ñ∞ ${BRed}[${BYellow} Collecting Public Information ${BRed}]
    ${DGrey}| ‚î£‚îÄ‚îÄ‚îÄ‚ïº‚ñ∞ ${BRed}[${BYellow} CMI ${BRed}]${BGreen}‚ïº‚ïº‚ñ∞‚ñ∞ ${BRed}[${BYellow} Collecting Machine Information ${BRed}]
    ${DGrey}| ‚î£‚îÄ‚îÄ‚îÄ‚ïº‚ñ∞ ${BRed}[${BYellow} CNI ${BRed}]${BGreen}‚ïº‚ïº‚ñ∞‚ñ∞ ${BRed}[${BYellow} Collecting Network Information ${BRed}]
    ${DGrey}| ‚î£‚îÄ‚îÄ‚îÄ‚ïº‚ñ∞ ${BRed}[${BYellow} CSI ${BRed}]${BGreen}‚ïº‚ïº‚ñ∞‚ñ∞ ${BRed}[${BYellow} Collecting Social Information ${BRed}]
    ${DGrey}| ‚îñ‚îÄ‚îÄ‚îÄ‚ïº‚ñ∞ ${BRed}[${BYellow} CLI ${BRed}]${BGreen}‚ïº‚ïº‚ñ∞‚ñ∞ ${BRed}[${BYellow} Collecting Local Information ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}] ü§¥ Exit / Quit / Close

    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Reconnaissance & Information Gathering ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}   ")
          read -p "$HacKingProMenuMain" cmd
          case $cmd in
            ls )
            lahs
            ;;
            p|P )
            HacKingProPlanning
            ;;
            # Collecting Public Information
            cpi|CPI )
            Checking_IP_Target
            Recon_Start
            while true; do
              cd "${x_Menu_1_CPI}"
              cd "${MainDirectoriyCaseNameRecon}"
              clear
              ToolHeaderRun
              TargetStatusRun
              HacKingProMenuMain=$(echo "${BRed}
              ${DGrey}  ‚îå‚îÄ${BRed}[${BYellow} CPI ${BRed}]${BGreen}‚îÄ‚îÄ‚ïº‚ñ∞  ${BRed}[${BYellow} Collecting Public Information ${BRed}]
              ${DGrey}  ‚îñ‚îÄ‚î≤‚îÄ‚îÄ${BRed}[${DGrey} p0 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} Ping Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p1 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} Arp Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p2 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} Nslookup Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p3 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} Dig Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p4 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} WhoIs Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p5 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} Dirb Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p6 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} TraceRoute Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p7 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} Nmap Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p8 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} IpInfo Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} p9 ${BRed}]${BYellow}‚ïº‚ïº‚ñ∞  ${BRed}[${DGrey} Robots.txt Scan ${BRed}]
              ${DGrey}    |‚îÄ‚îÄ${BRed}[${DGrey} all ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${DGrey} All Scans ${BRed}]
              ${DGrey}    ‚îñ‚îÄ‚îÄ${BRed}[${DGrey} show ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${DGrey} show Scan ${BRed}]
              ${DGrey}
              ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}] ü§¥ Exit / Quit / Close

              ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
              ${BGreen}|
              ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
              ${BGreen}|
              ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Information Gathering ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${slowBlink}CPI${resetT} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}  ")
              read -p "$HacKingProMenuMain" cmd
              case $cmd in
                show )
                less ${targetNAME}-HacKingPro-Recon-Log.md
                ;;
                x|X|exit|quit|Exit )
                clear
                AwesomeLineExit
                break
                ;;
                ls )
                lahs
                ;;
                p0 )
                # Ping Scan Log
                infoPing
                ;;
                p1 )
                # Arp Scan Log
                infoArp
                ;;
                p2 )
                # Nslookup Scan Log
                infoNsLookUp
                ;;
                p3 )
                # Dig Scan Log
                infoDig
                ;;
                p4 )
                # WhoIs Scan Log
                infoWhois
                ;;
                p5 )
                # Dirb Scan Log
                infoDirb
                ;;
                p6 )
                # TraceRoute Scan Log
                infoTraceRoute
                ;;
                p7 )
                # Nmap Scan Log
                infoNmap
                ;;
                p8 )
                # IpInfo Scan Log
                infoIp
                ;;
                p9 )
                # Robot.txt Scan Log
                infoRobots
                ;;
                all|ALL|cpi|CPI )
                AllInfo
                less ${targetNAME}-HacKingPro-Recon-Log.md
                ;;
              esac
            done
            ;;
            # Collecting Domain Information
            cdi|CDI )
            # SubMaxPro
            SubDomFind ${targetIP} >> ${MainDirectoriyCaseNameRecon}-${targetNAME}-SubDomFind.log
            ;;
            # Collecting Network Information
            cni|CNI )
            while true; do
              cd "${x_Menu_1_CNI}"
              clear
              ToolHeaderRun
              TargetStatusRun
              HacKingProMenuMain=$(echo "${BRed}
    ${DGrey}‚îè${BRed}[${BYellow} CNI ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${BYellow} Network Information ${BRed}]
    ${DGrey}‚îñ‚îÄ‚î≤‚îÄ‚îÄ${BRed}[${DGrey} n0 ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${DGrey} Nmap Scan ${BRed}]
    ${DGrey}  ‚îñ‚îÄ‚îÄ${BRed}[${DGrey} ni ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${DGrey} NetInfo Scan ${BRed}]

    ${DGrey}‚îå‚îÄ‚îÄ${BRed}[${BYellow} Collecting Network Information ${BRed}]
    ${DGrey}|
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} User Enumeration  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} System Groups  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} Network Hosts  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} OS Hostnames  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} OS System Type  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} System Banners  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} SSL Certificates  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} Open Ports and More  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}] ü§¥ Exit / Quit / Close

    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Information Gathering ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} CMI ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}  ")
                read -p "$HacKingProMenuMain" cmd
                case $cmd in
                  x|X|exit|quit|Exit )
                  clear
                  AwesomeLineExit
                  break
                  ;;
                  ls )
                  lahs
                  ;;
                esac
              done
            ;;
            # Collecting Machie Information
            cmi|CMI )
            while true; do
              cd "${x_Menu_1_CMI}"
              clear
              ToolHeaderRun
              TargetStatusRun
              HacKingProMenuMain=$(echo "${BRed}
    ${DGrey}‚îè${BRed}[${BYellow} CMI ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${BYellow} Machine Information ${BRed}]
    ${DGrey}‚îñ‚îÄ‚î≤‚îÄ‚îÄ${BRed}[${DGrey} m0 ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${DGrey} xxx Scan ${BRed}]
    ${DGrey}  ‚îñ‚îÄ‚îÄ${BRed}[${DGrey} m1 ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${DGrey} xxx Scan ${BRed}]

    ${DGrey}‚îå‚îÄ‚îÄ${BRed}[${BYellow} Collecting Machine Information ${BRed}]
    ${DGrey}|
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} 00 ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} HTML Full Report  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} User Enumeration  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} System Groups  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} Network Hosts  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} OS Hostnames  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} OS System Type  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} System Banners  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} SSL Certificates  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} !! ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} Open Ports and More  ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} $XXX ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}] ü§¥ Exit / Quit / Close

    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Information Gathering ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} CMI ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}  ")
                read -p "$HacKingProMenuMain" cmd
                case $cmd in
                  0|00 )

                  clear
                  HKP_HTML_Export
                  echo '
                  <div class="row card-body gradient-border raise">
                    <h3 class="text-center glitch b2" hackbox-heading>' >> ${targetNAME}_HKP_REPORT.html
                    echo "HacKingPro | Linux Privilege Escalation Checklist" >> ${targetNAME}_HKP_REPORT.html
                    echo '
                    </h3>
                    <br>
                    <code>
                      ' >> ${targetNAME}_HKP_REPORT.html
                      # <div class="form-check">
                      #   <input class="form-check-input" type="checkbox" value="" id="defaultCheck2" checked="">
                      #   <label class="form-check-label" for="defaultCheck2"> Indeterminate </label>
                      # </div>
                      # <div class="form-check">
                      #   <input class="form-check-input" type="checkbox" value="" id="defaultCheck3" checked="">
                      #   <label class="form-check-label" for="defaultCheck3"> Checked </label>
                      # </div>
                      # <div class="form-check">
                      #   <input class="form-check-input" type="checkbox" value="" id="disabledCheck1" disabled="">
                      #   <label class="form-check-label" for="disabledCheck1"> Disabled Unchecked </label>
                      # </div>
                      # <div class="form-check">
                      #   <input class="form-check-input" type="checkbox" value="" id="disabledCheck2" disabled="" checked="">
                      #   <label class="form-check-label" for="disabledCheck2"> Disabled Checked </label>
                      # </div>

                      echo '
                      <div class="card-body">
                          <div class="row gy-3">
                            <div class="col-md">
                              <small class="text-light fw-semibold">Checkboxes</small>
                              <div class="form-check mt-3">
                                <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
                                <label class="form-check-label" for="defaultCheck1"> Unchecked </label>
                              </div>
                            </div>
                          </div>
                        </div>' >> ${targetNAME}_HKP_REPORT.html
                  echo '
                    </code>
                  </div>
                  <br>
                  ' >> ${targetNAME}_HKP_REPORT.html

                  HKP_PrivEsc_Checklist_HTML_Export_Template(){
                    echo "<h3 class="text-center glitch b2" hackbox-heading> $(date) </h3>" >> ${targetNAME}_HKP_REPORT.html
                    echo '
                    <div class="row card-body gradient-border raise">
                      <h3 class="text-center glitch b2" hackbox-heading>' >> ${targetNAME}_HKP_REPORT.html
                      echo "Linux Privilege Escalation | Checklist" >> ${targetNAME}_HKP_REPORT.html
                      echo '
                      </h3>
                      <br>
                      <code>
                        <pre>' >> ${targetNAME}_HKP_REPORT.html
                        echo "
                        Checklists
                        Kernel and distribution release details

                        # System Information:
                        Hostname

                        # Networking details:
                        Current IP
                        Default route details
                        DNS server information

                        # User Information:
                        Current user details
                        Last logged on users
                        Shows users logged onto the host
                        List all users including uid/gid information
                        List root accounts
                        Extracts password policies and hash storage method information
                        Checks umask value
                        Checks if password hashes are stored in /etc/passwd
                        Extract full details for 'default' uid's such as 0, 1000, 1001 etc
                        Attempt to read restricted files i.e. /etc/shadow
                        List current users history files (i.e .bash_history, .nano_history, .mysql_history , etc.)
                        Basic SSH checks

                        # Privileged access:
                        Which users have recently used sudo
                        Determine if /etc/sudoers is accessible
                        Determine if the current user has Sudo access without a password
                        Are known 'good' breakout binaries available via Sudo (i.e. nmap, vim etc.)
                        Is root's home directory accessible
                        List permissions for /home/

                        # Environmental:
                        Display current $PATH
                        Displays env information

                        # Jobs/Tasks:
                        List all cron jobs
                        Locate all world-writable cron jobs
                        Locate cron jobs owned by other users of the system
                        List the active and inactive systemd timers

                        # Services:
                        List network connections (TCP & UDP)
                        List running processes
                        Lookup and list process binaries and associated permissions
                        List inetd.conf/xined.conf contents and associated binary file permissions
                        List init.d binary permissions
                        Version Information (of the following):
                        Sudo
                        MYSQL
                        Postgres
                        Apache
                        Checks user config
                        Shows enabled modules
                        Checks for htpasswd files
                        View www directories
                        Default/Weak Credentials:
                        Checks for default/weak Postgres accounts
                        Checks for default/weak MYSQL accounts

                        # Searches:
                        Locate all SUID/GUID files
                        Locate all world-writable SUID/GUID files
                        Locate all SUID/GUID files owned by root
                        Locate 'interesting' SUID/GUID files (i.e. nmap, vim etc)
                        Locate files with POSIX capabilities
                        List all world-writable files
                        Find/list all accessible *.plan files and display contents
                        Find/list all accessible *.rhosts files and display contents
                        Show NFS server details
                        Locate *.conf and *.log files containing keyword supplied at script runtime
                        List all *.conf files located in /etc
                        Locate mail
                        Platform/software specific tests:
                        Checks to determine if we're in a Docker container
                        Checks to see if the host has Docker installed
                        Checks to determine if we're in an LXC container
                        " >> ${targetNAME}_HKP_REPORT.html
                    echo '
                        </pre>
                      </code>
                    </div>
                    <br>
                    ' >> ${targetNAME}_HKP_REPORT.html

                  }
                  HKP_PrivEsc_Checklist_HTML_Export_Template
                  # Looting for passwords
                  # Files containing passwords
                  HKP_PasSearch_HTML_Export_Template(){
                    echo '
                    <div class="row card-body gradient-border raise">
                      <h3 class="text-center glitch b2" hackbox-heading>' >> ${targetNAME}_HKP_REPORT.html
                      echo "Looting for Passwords | $(date)" >> ${targetNAME}_HKP_REPORT.html
                      echo '
                      </h3>
                      <br>
                      <code>
                        <pre>' >> ${targetNAME}_HKP_REPORT.html
                        echo " $(grep --color=auto -rnw '/' -ie "PASSWORD" --color=always 2> /dev/null)" >> ${targetNAME}_HKP_REPORT.html
                        echo " <br>" >> ${targetNAME}_HKP_REPORT.html
                        echo " $(find . -type f -exec grep -i -I "PASSWORD" {} /dev/null \;)" >> ${targetNAME}_HKP_REPORT.html
                    echo '
                        </pre>
                      </code>
                    </div>
                    <br>
                    ' >> ${targetNAME}_HKP_REPORT.html

                  }
                  HKP_PasSearch_HTML_Export_Template
                  open ${targetNAME}_HKP_REPORT.html
                  ;;
                  x|X|exit|quit|Exit )
                  clear
                  AwesomeLineExit
                  break
                  ;;
                  ls )
                  lahs
                  ;;
                esac
              done
            ;;
            # Collecting Social Information
            csi|CSI )
            while true; do
              cd "${x_Menu_1_CSI}"
              clear
              ToolHeaderRun
              TargetStatusRun
              HacKingProMenuMain=$(echo "${BRed}

    ${DGrey}‚îå‚îÄ‚îÄ${BRed}[${BYellow} Collecting Social Information ${BRed}]
    ${DGrey}|
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} 00 ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} UserFinder ${BRed}]
    ${DGrey}|
    ${DGrey}|‚îÄ‚îÄ${BRed}[${DGrey} 01 ${BRed}]${BGreen}‚îÄ‚îÄ ${BRed}[${DGrey} E4GL30S1NT ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}] ü§¥ Exit / Quit / Close

    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Information Gathering ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} CSI ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}  ")
                read -p "$HacKingProMenuMain" cmd
                case $cmd in
                  ls )
                  lahs
                  ;;
                  x|X|exit|quit|Exit )
                  clear
                  AwesomeLineExit
                  break
                  ;;
                  0|00|uf|UF|UserFinder|userfinder )
                  cd "${MainDirectoriyCaseNameRecon}"
                  UserFinder >> "${MainDirectoriyCaseNameRecon}/${targetNAME}-UserFinder.log"
                  less -R "${MainDirectoriyCaseNameLocal}/${targetNAME}-UserFinder.log"
                  Press_ENTER
                  ;;
                esac
              done
            ;;
            # Network Information
            ni )
            net_info
            break
            ;;
            x|X|exit|quit|Exit )
            clear
            cd ${MainDirectoriy}
            AwesomeLineExit
            break
            ;;
          esac
        done
      ;;
      02|2 )
      HacKingPro_Weaponization
      ;;
      03|3 )
      while true; do
        cd "$x_Menu_3"
        clear
        ToolHeaderRun
        TargetStatusRun
        HacKingProMenuMain=$(echo "
    ${DGrey}‚îå‚îÄ‚îÄ‚î≤‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Delivery ${BRed}]
    ${DGrey}|  ‚îñ‚îÄ‚î≤‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Intruder transmits the malware via a phishing email or another medium ${BRed}]
    ${DGrey}|    ‚îñ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Intruder transmits weapon to target (e.g., via e-mail attachments, websites or USB drives) ${BRed}]
    ${DGrey}|
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 1 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} USB ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 2 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} Email ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 3 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} WebSite ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 4 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} Message ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}]${BGreen} ‚ïº ${BRed}[${DGrey} Exit / Quit / Close ${BRed}]


    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} üîÆ ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}   ")
        read -p "$HacKingProMenuMain" cmd
        case $cmd in
          ls )
          lahs
          ;;
          arsenal|Arsenal|cs|CS|cheats|Cheatsheets|CheatSheets|Commands|commands|zz )
          Arsenal
          ;;
          p|P )
          HacKingProPlanning
          ReportPlanning
          ;;
          x|X|exit|EXIT )
          cd ${MainDirectoriy}
          clear
          AwesomeLineExit
          break
          ;;
        esac
      done
      ;;
      04|4 )
      # MainAttacKing
      clear
      EnumerationPro
      Press_ENTER
      ;;
      05|5 )
      while true; do
        cd "$x_Menu_5"
        clear
        ToolHeaderRun
        TargetStatusRun

        HacKingProMenuMain=$(echo "
    ${DGrey}‚îå‚îÄ‚îÄ‚î≤‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Installation ${BRed}]
    ${DGrey}|  ‚îñ‚îÄ‚î≤‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} The malware installs a backdoor or other ingress accessible to the attacker ${BRed}]
    ${DGrey}|    ‚îñ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Malware weapon installs access point (e.g., backdoor) usable by intruder. ${BRed}]
    ${DGrey}|
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 1 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} USB ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 2 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} Email ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 3 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} WebSite ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 4 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} Message ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}]${BGreen} ‚ïº ${BRed}[${DGrey} Exit / Quit / Close ${BRed}]


    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} üîÆ ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}   ")

        read -p "$HacKingProMenuMain" cmd
        case $cmd in
          ls )
          lahs
          ;;
          arsenal|Arsenal|cs|CS|cheats|Cheatsheets|CheatSheets|Commands|commands|zz )
          Arsenal
          ;;
          p|P )
          HacKingProPlanning
          ReportPlanning
          ;;
          x|X|exit|EXIT )
          cd ${MainDirectoriy}
          clear
          AwesomeLineExit
          break
          ;;
        esac
      done
      ;;
      06|6 )
      while true; do
        cd "$x_Menu_6"
        clear
        ToolHeaderRun
        TargetStatusRun

        HacKingProMenuMain=$(echo "
    ${DGrey}‚îå‚îÄ‚îÄ‚î≤‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Command and Control ${BRed}]
    ${DGrey}|  ‚îñ‚îÄ‚î≤‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} The intruder gains persistent access to the victim‚Äôs systems/network ${BRed}]
    ${DGrey}|    ‚îñ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Malware enables intruder to have hands on the keyboard persistent access to target network. ${BRed}]
    ${DGrey}|
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 1 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} USB ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 2 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} Email ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 3 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} WebSite ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 4 ${BRed}]${BGreen}‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BGreen} Message ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}]${BGreen} ‚ïº ${BRed}[${DGrey} Exit / Quit / Close ${BRed}]


    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} üîÆ ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}   ")

        read -p "$HacKingProMenuMain" cmd
        case $cmd in
          ls )
          lahs
          ;;
          arsenal|Arsenal|cs|CS|cheats|Cheatsheets|CheatSheets|Commands|commands|zz )
          Arsenal
          ;;
          p|P )
          HacKingProPlanning
          ;;
          x|X|exit|EXIT )
          cd ${MainDirectoriy}
          clear
          AwesomeLineExit
          break
          ;;
        esac
      done
      ;;
      07|7 )
      while true; do
        cd "$x_Menu_7"
        clear
        ToolHeaderRun
        TargetStatusRun

        HacKingProMenuMain=$(echo "
    ${DGrey}‚îå‚îÄ‚îÄ‚î≤‚îÄ‚îÄ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Actions on Objective ${BRed}]
    ${DGrey}|  ‚îñ‚îÄ‚î≤‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Intruder initiates end goal actions, such as data theft, data corruption, or data destruction ${BRed}]
    ${DGrey}|    ‚îñ‚îÄ‚îÄ‚ïº ${BRed}[${BYellow} Intruder takes action to achieve their goals, such as data exfiltration, data destruction, or encryption for ransom. ${BRed}]
    ${DGrey}|
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 1 ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ‚îÄ‚ïº$resetT ${BRed}[${BGreen} USB ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 2 ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ‚îÄ‚ïº$resetT ${BRed}[${BGreen} Email ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 3 ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ‚îÄ‚ïº$resetT ${BRed}[${BGreen} WebSite ${BRed}]
    ${DGrey}|‚îÄ‚îÄ${BRed}[${BGreen} 4 ${BRed}]${BGreen}${faintT}‚îÄ‚îÄ‚îÄ‚ïº$resetT ${BRed}[${BGreen} Message ${BRed}]
    ${DGrey}|
    ${DGrey}‚îî‚îÄ‚îÄ${BRed}[${DGrey} X ${BRed}]${BGreen} ‚ïº ${BRed}[${DGrey} Exit / Quit / Close ${BRed}]


    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} üîÆ ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}   ")

        read -p "$HacKingProMenuMain" cmd
        case $cmd in
          ls )
          lahs
          ;;
          arsenal|Arsenal|cs|CS|cheats|Cheatsheets|CheatSheets|Commands|commands|zz )
          Arsenal
          ;;
          p|P )
          HacKingProPlanning
          ;;
          x|X|exit|EXIT )
          cd ${MainDirectoriy}
          clear
          AwesomeLineExit
          break
          ;;
        esac
      done
      ;;
      xp|ranger|Ranger|RangerPro )
      while true; do
        clear
        cd "${MainDirectoriyCaseName}"
        ToolHeaderRun
        TargetStatusRun
        #statements
        TargetStatus=$(echo "
    ${ORANGE}${faintT}‚îå‚îÄ‚îÄ‚ïº${resetT}${BBlue}‚î§${ORANGE} Xplorer Files Pro ${BBlue}‚îú${ORANGE}${faintT}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞‚ñ∞‚ñ∞
    ${ORANGE}${faintT}‚îÇ
    ${ORANGE}${faintT}|‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞${resetT}${BRed} [${ORANGE} 1 ${BRed}]${ORANGE}${faintT}‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞ ${BRed}[${DGrey} XplorerPro ${BRed}]${ORANGE}${faintT}‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞
    ${ORANGE}${faintT}|‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞${resetT}${BRed} [${ORANGE} 2 ${BRed}]${ORANGE}${faintT}‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞ ${BRed}[${DGrey} RangerPro ${BRed}]${ORANGE}${faintT}‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞
    ${ORANGE}${faintT}|‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞${resetT}${BRed} [${ORANGE} 3 ${BRed}]${ORANGE}${faintT}‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞ ${BRed}[${DGrey} GTopPro ${BRed}]${ORANGE}${faintT}‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞
    ${ORANGE}${faintT}‚îÇ
    ${ORANGE}${faintT}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${resetT}${BCyan}‚ïº‚ñ∞‚ñ∞‚ñ∞

    ${BGreen}‚îå‚îÄ‚îÄ${BRed}[${BCyan} Arsenal ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BCyan} Cheat Sheets ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Command ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${LGreen} $ArsenalCommand ${BRed}]
    ${BGreen}|
    ${BGreen}|‚îÄ‚îÄ${BRed}[${DGrey} ~$(pwd) ${BRed}]
    ${BGreen}|
    ${BGreen}‚îî‚îÄ‚îÄ${BRed}[${BYellow} $(AnLoMinus) ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} ${HacKingPro} ${BRed}]${BYellow}‚ïº‚ñ∞  ${BRed}[${BGreen} Xplorer Files Pro ${BRed}]${BYellow}‚ïº‚ñ∞  ${BGreen}   ")
    read -p "${TargetStatus}" cmd
    case $cmd in
      1 )
      XplorerPro
      read
      ;;
      2 )
      RangerPro
      read
      ;;
      3 )
      GTopPro
      read
      ;;
      x|X|exit|quit|Exit )
      clear
      cd ${MainDirectoriy}
      AwesomeLineExit
      break
      ;;
      ls )
      lahs
      ;;
      p|P )
      HacKingProPlanning
      ;;
      cl )
      ClearTarget
      ;;
    esac
  done
      ;;
      any|Any|AnyTool|anytool )
      cd Menu
      cd AnyTool
      sh AnyTool
      cd ${MainDirectoriy}
      ;;
      arsenal|Arsenal|cs|CS|cheats|Cheatsheets|CheatSheets|Commands|commands|zz )
      Arsenal
      ;;
      p|P )
      HacKingProPlanning
      ReportPlanning
      ;;
      cl )
      ClearTarget
      ;;
      ls )
      AwesomeExplorer
      ;;
      x|X|exit|quit|Exit )
      clear
      cd ${MainDirectoriy}
      AwesomeLineExit
      break
      ;;
      r|remainder|note|td|todo)
      AwesomeToDo
      AwesomeDontForget
      Press_ENTER
      ;;
      pt|PT|pentest|PenTest ) . HacKingPro-Parts/Plugins/HacKingPro-PenTestPro;  ;;
      * )
      echo "$InvalidOption"
      ;;
    esac
  done
}
#--‚ïº[ Main Menu ]--‚ïº‚ñ∞ [ Arsenal ]
Arsenal(){
  clear
  # Getting Arsenal Cheatsheets
  if [ -d Arsenal ]; then
    #statements
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Arsenal Installed  \n"
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}cd Into Arsenal\n"
    cd Arsenal
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}List Arsenal Directories \n"
    lahs
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Arsenal Runnin  \n"
    (./run)
  fi
  if [ -d $HOME/opt/anaconda3/bin/arsenal ]; then
    #statements
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Arsenal Installed  \n"
    return
  else
    #statements
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Creating Folder Arsenal \n"
    mkdir Arsenal
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${LYellow}Cloning Into [./Arsenal] \n"
    git clone https://github.com/Orange-Cyberdefense/Arsenal ./Arsenal
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}cd Into Arsenal\n"
    cd Arsenal
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}List Arsenal Directories \n"
    lahs
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Installing Arsenal Requirements \n"
    python3 -m pip install -r requirements.txt
    echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Arsenal Run Installation  \n"
    (./run)
    if [ "$?" == "1" ]; then
      #statements
      echo "\n\t\t ${BRed}[${LGrey}CS${BRed}]${BBlue} - ${BYellow}Arsenal Installation ${BRed} ERROR  \n"
    fi
    echo "\n\n"
    echo "\n\t\t ${BRed}[${BCyan}Readed Command${BRed}]${BBlue} - ${BYellow} $ReaDone  \n"
    Press_ENTER ArsenalCommand

  fi
  cd ..

}
#####################################
#------‚ïº‚ïº‚ñ∞[ Main Menu ]--‚ïº‚ñ∞ [ End ] #
#####################################

#################################
#------‚ïº‚ïº‚ñ∞[ Start ]--‚ïº‚ñ∞[ Head ] #
#################################
#--‚ïº‚ñ∞[ Start ]-‚ïº‚ñ∞ [ Main Menu ]
MainMenu
################################
#------‚ïº‚ïº‚ñ∞[ Start ]--‚ïº‚ñ∞[ End ] #
################################

#-MetaData----------------------------------------------------#
#                                        (Update: 30-10-2022) #
#  File Name: HacKingPro                                      #
#  Aouther Name: Leon Yaakobov                                #
#  Source: https://github.com/AnLoMinus/HacKingPro            #
#                                                             #
#-Done-!------------------------------------------------------#
