#!/bin/sh
# $Revision$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# (c) Tim Brown, 2012
# <mailto:timb@nth-dimension.org.uk>
# <http://www.nth-dimension.org.uk/> / <http://www.machine.org.uk/>
#
# Check if privileged files call temporary files handling functions
# Based on ideas found at http://people.redhat.com/sgrubb/security/

. lib/misc/stdio
. lib/misc/privileged
. lib/misc/binary

privileged_tmp_init () {
	stdio_message_log "privileged_tmp" "Starting at: `date`"
}

privileged_tmp_main () {
	privileged_list | while read filetype filename usergroupid
	do
		if [ "`binary_matches_string \"${filename}\" \"/tmp\"`" -eq 1 ]
		then
			if [ "`file_is_textual \"${filename}\"`" -eq 1 -a "`binary_matches_string \"${filename}\" \">\"`" -eq 1 ]
			then
				stdio_message_warn "privileged_tmp" "${filetype} ${filename} script (${usergroupid}) may create predictable files in /tmp unsafely"
			elif [ "`binary_matches_function \"${filename}\" \"mkstemp|tempnam|tmpfile\"`" -eq 1 ]
			then
				# XXX is part of template filename that is replaced by mkstemp, etc. - without an XXX, we assume the filename is likely to be predictable
				if [ "`binary_matches_string \"${filename}\" \"XXX\"`" -ne 1 ]
				then
					stdio_message_warn "privileged_tmp" "${filetype} ${filename} (${usergroupid}) may create predictable files in /tmp unsafely"
				fi
			fi
		fi
	done
}

privileged_tmp_fini () {
	stdio_message_log "privileged_tmp" "Ending at: `date`"
}
