#!/bin/sh
#!/bin/bash
#!/usr/bin/bash
#!/usr/bin/env bash
#!/data/data/com.termux/files/usr/bin/bash
###############################################
#     _   _            _  ___                 #
#    | | | | __ _  ___| |/ (_)_ __   __ _     #
#    | |_| |/ _' |/ __| ' /| | '_ \ / _' |    #
#    |  _  | (_| | (__| . \| | | | | (_| |    #
#    |_| |_|\__,_|\___|_|\_\_|_| |_|\__, |    #
#                                   |___/     #
###############################################
# Name : Anlominus
# Description : HacKingPro is a hacking tools installer and package manager for hacker's.
# New Date : 2022 January
# Aouther: Anlominus RhytMix 2022
# Skils: Best Copyrigter IN the COSMOS!
# BIG THANX TO ALL COMUNITY THAT SHARE ALL THAT FREE GREAT SCRIPTS
# CREDIT: ToAllWorldCreatorsHackingTools
# Location: Made With Love IN ISRAEL !
# Source: https://github.com/Anlominus/Anlominus
###############################################
##################################
#-----------) Colors (-----------#
##################################
# |
nc="\033[00m"
white="\033[1;37m"
grey="\033[0;37m"
purple="\033[0;35m"
red="\033[31m"
green="\033[32m"
yellow="\033[33m"
purple="\033[0;35m"
cyan="\033[0;36m"
cafe="\033[0;33m"
fiuscha="\033[0;35m"
blue="\033[34m"
orange="\033[38;5;202m"
# |
###################################
#-----------) Letters (-----------#
###################################
# |
nr="R"
ni="I"
nt="T"
nx="X"
nq="Q"
na="A"
nb="ab"
n00="00"
n1="1"
n2="2"
n3="3"
n4="4"
n5="5"
n6="6"
n8="8"
n7="7"
n9="9"
n10="10"
n11="11"
n12="12"
n13="13"
n14="14"
n15="15"
n16="16"
n17="17"
n18="18"
# |
##########################
#    SymbolVariables     #
##########################
# |
cBack="$red[$cyan Back $red]$grey"
uSage="$red[$cyan USAGE $red]$grey("
installingDir="$red[$grey Installing Dir $red]$cyan"
# |
##########################
#    SymbolVariables     #
##########################
# 💪  🏴 ‍ ☠️ 👁‍ 👌 💀 📌 👍
# ♥️ ✯ 🔞 🗨 👩‍ 💻 😜 😡
# 💥 ☣ ✍ █ ▓ ░ ▒ 💿 🎧 📸
# 👤 🛠️ 📚 🌐 🐧 ❗ ✳️ 🛡️ 🎭 🖧
# ⚡ 🚶
cEye="$green 👁 $cyan"
cWall="$purple[$purple░$purple]$cyan"
cDock="$purple[$green📌$purple]$cyan"
cPassKey="$purple[$green🔐$purple]$cyan"
cAnlominus="$purple[$green👽$purple]$cyan"
cAlien="$purple[$green🙏$purple]$cyan"
cGlasses="$purple[$green👓$purple]$yellow"
cLock="$red[$yellow🔒$red]$grey"
cInvalid="$red[$yellow🚫$red]$red"
cKey="$red[$yellow🔑$red]$yellow"
cLink="$red[$orange🔗$red]$orange"
cSharp="$red[$yellow#$red]$blue"
cInfo="$red[$yellow!$red]$blue"
cPlus="$red[$green+$red]$white"
cDone="$red[$green✔$red]$green"
cFalse="$yellow[$red✘$yellow]$red"
cDanger="$yellow ⚠️ $red"
##########################
#    CommandVariables     #
##########################
# |
currentDir="${blue}Dir$orange $(pwd)"
SysInfo="${blue}SysInfo$orange $(uname)"
##########################
#    NumberVariables     #
##########################
# |
cr="$orange[$green$nr$orange]$grey"
ci="$orange[$green$ni$orange]$grey"
ct="$orange[$green$nt$orange]$grey"
cx="$orange[$green$nx$orange]$grey"
cq="$orange[$green$nq$orange]$grey"
ca="$orange[$green$na$orange]$grey"
cb="$orange[$green$nb$orange]$grey"
c1="$orange[$green$n1$orange]$cafe"
c2="$orange[$green$n2$orange]$cafe"
c3="$orange[$green$n3$orange]$cafe"
c4="$orange[$green$n4$orange]$cafe"
c5="$orange[$green$n5$orange]$cafe"
c6="$orange[$green$n6$orange]$cafe"
c7="$orange[$green$n7$orange]$cafe"
c8="$orange[$green$n8$orange]$cafe"
c9="$orange[$green$n9$orange]$cafe"
c10="$orange[$green$n10$orange]$cafe"
c11="$orange[$green$n11$orange]$cafe"
c12="$orange[$green$n12$orange]$cafe"
c13="$orange[$green$n13$orange]$cafe"
c14="$orange[$green$n14$orange]$cafe"
c15="$orange[$green$n15$orange]$cafe"
c16="$orange[$green$n16$orange]$cafe"
c17="$orange[$green$n17$orange]$cafe"
c18="$orange[$green$n18$orange]$cafe"
##################################
#-----------) Banner (-----------#
##################################
# |
BannerMan(){
  echo "$purple
                          .
                      ..',,'..
                    .',,,,,,,,,.
                   .',,,'..',,,,'.
                  .',,'.     .,,,'
                 .',,.        .,,,.
                .',..           .,,.
                .'.              ..,.
                .                  .'
               ..   $green  Aภl๏miภuຮ $purple   .
               ..                   .
               ..                  ...
        ....''''.   $blue HacKingPro$purple    .','''....
      .',,,,,,,,'..               ..',,,,,,,,'.
     ...'',,,,,,,'...          ....',,,,,,,,'...
    ....'',;;;;;;;,,'''......'''',,;;;;;;;,'''...
   ......'',,;;;:::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/:'.
   .....'.'',,;;::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/'....
   .......',,;;::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/,......
   .'''''',,;;::/xxxxxxxxxx${cyan}DAT0S${purple}xxxxxxxxxxxx/,.......
  ..'''',',;;::/xxxxxxxxx${blue}ANL0M1NUS${purple}xxxxxxxxx/,'''''...
 ........';;::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/:'.........
......  .':::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/::'..  ......
......:.;:::/xxxxxxxxxxxxxxxxxxxxxxxxxxx/::;'c,':......
 .''..cc.''''''',,,,,,,;;;;;,,,,,,,,''''....:.cc..''.
  \t ${orange}  ┌──[${blue}Anlominus${purple}@${red}HacKingPro${cyan}$~${orange}]
  \t ${orange}  └──╼ ${cyan} sh HacKingPro
  "
}
# |
# Banner(){
#   echo "  $cSharp https://www.github.com/Anlominus $cSharp\n"
# }
# |
Banner(){
  echo "
  $cWall░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░$cWall
  $cWall░     _   _            _  ___                 ░$cWall
  $cWall░    | | | | __ _  ___| |/ (_)_ __   __ _     ░$cWall
  $cWall░    | |_| |/ _' |/ __| ' /| | '_ \ / _' |    ░$cWall
  $cWall░    |  _  | (_| | (__| . \| | | | | (_| |    ░$cWall
  $cWall░    |_| |_|\__,_|\___|_|\_\_|_| |_|\__, |    ░$cWall
  $cWall░                                   |___/     ░$cWall
  $cWall▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒$cWall
  $cWall▒         ▀▀█▀▀ █▀▀█ █▀▀█ █   █▀▀             ▒$cWall
  $cWall▒           █   █  █ █  █ █   ▀▀█             ▒$cWall
  $cWall▒           ▀   ▀▀▀▀ ▀▀▀▀ ▀▀▀ ▀▀▀$orange v1.5        ${cyan}▒$cWall
  $cWall▒ https://www.github.com/Anlominus/HacKingPro ▒$cWall
  $cWall▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒$cWall"
}
Exiting(){
  echo "
  $cWall░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░$cWall
  $cWall░                                             ░$cWall
  $cWall░  ╔═══════════════════════════════════════╗  ░$cWall
  $cWall░  ╠═>$cDanger Exiting Anlominus Tools...$cDanger${cyan} <==║  ░$cWall
  $cWall░  ╚═══════════════════════════════════════╝  ░$cWall
  $cWall░                                             ░$cWall
  $cWall░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░$cWall"
}
SourceCodeURL(){
  echo "\t  $cLink https://www.github.com/Anlominus/HacKingPro $cLink\n"
}
PromptFun(){
  echo "  $cWall▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓$cWall"
  echo "  $cWall▓                                             ▓$cWall"
  echo "  ${cWall}▓${orange}  ┌──[${blue}Anlominus${purple}👽${red}HacKingPro${cyan}$~${orange}]               ${cyan}▓$cWall"
  echo -n "  ${cWall}▓${orange}  └──╼ ${green} "
}
ReadSomthing(){
  echo "
$cWall▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓$cWall
$cWall▓                                             ▓$cWall
$cWall▓  ╔═══════════════════════════════════════╗  ▓$cWall
$cWall▓  ╠═>   Press ENTER for back to Menu   <==║  ▓$cWall
$cWall▓  ╚═══════════════════════════════════════╝  ▓$cWall
$cWall▓                                             ▓$cWall
$cWall▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓$cWall"
  echo -n ""
  read read_somthing
}
AnlominusBasicInformation(){
user=`whoami`          2> /dev/null # Current user
host=`uname -n`        2> /dev/null # Network node hostname
home=`echo $HOME`      2> /dev/null # User home directory
usid=`id -u`           2> /dev/null # User ID
gpid=`id -g`           2> /dev/null # Group ID
grps=`groups`          2> /dev/null # List all groups
knam=`uname -s`        2> /dev/null # Kernel name
krel=`uname -r`        2> /dev/null # Kernel release
kver=`uname -v`        2> /dev/null # Kernel version
arch=`uname -m`        2> /dev/null # Architecture
osys=`uname -o`        2> /dev/null # Operating System

echo "--[ Basic Information ]--"
echo "==> ABOUT THE USER"
echo "* Username       : $user"
echo "* Hostname       : $host"
echo "* Home Path      : $home"
echo "* EUID           : $usid"
echo "* EGID           : $gpid"
echo "* Groups         : $grps"
echo "==> ABOUT THE SYSTEM"
echo "* Kernel Name    : $knam"
echo "* Kernel Release : $krel"
echo "* kernel Version : $kver"
echo "* Architecture   : $arch"
echo "* OS Name        : $osys"
echo "----------------------------------------------"
echo
}
# Hardware Information

prdfmly=`cat /sys/class/dmi/id/product_family`  2> /dev/null # Product family
prdname=`cat /sys/class/dmi/id/product_name`    2> /dev/null # Product name
prdvers=`cat /sys/class/dmi/id/product_version` 2> /dev/null # Product Version

# CPUs and bugs
cpubugs=`
	grep "model name\|bugs" /proc/cpuinfo |
	awk -F ':' '{print "*",substr($2,2)}'
	` 2> /dev/null

meminfo=`grep "Mem" /proc/meminfo` 2> /dev/null # Memory information

# Total memory in kB
memtotl=`
	echo "$meminfo"  |
	grep "MemTotal:" |
	awk -F ' ' '{print $(NF-1)}'
	` 2> /dev/null

# Available memory in kB
memavbl=`
	echo "$meminfo"     |
	grep "MemAvailable" |
	awk -F ' ' '{print $(NF-1)}'
	` 2> /dev/null

# Free memory in kB
memfree=`
	echo "$meminfo" |
	grep "MemFree:" |
	awk -F ' ' '{print $(NF-1)}'
	` 2> /dev/null

echo "--[ Hardware Information ]--"
echo "==> Product"
echo "* Product Family  : $prdfmly"
echo "* Product Name    : $prdname"
echo "* Product Version : $prdvers"
echo "==> CPUs and Bugs"
echo "$cpubugs"
echo "==> Memory"
echo "* RAM Total      : $memtotl kB"
echo "* RAM Available  : $memavbl kB"
echo "* RAM Free       : $memfree kB"
echo "----------------------------------------------"
echo

# BIOS Information

biosvend=`cat /sys/class/dmi/id/bios_vendor`  2> /dev/null # Vendor
biosdate=`cat /sys/class/dmi/id/bios_date`    2> /dev/null # Date
biosvers=`cat /sys/class/dmi/id/bios_version` 2> /dev/null # Version

echo "--[ BIOS Information ]--"
echo "* BIOS Vendor  : $biosvend"
echo "* BIOS Date    : $biosdate"
echo "* BIOS Version : $biosvers"
echo "----------------------------------------------"
echo

# Users and Groups

# Sorted list of all users
auser=`
	printf "* %-24s %8s %8s   %s\n" "(Shell)" "(GID)" "(UID)" "(User)"          ;
	awk -F ':' '{printf "* %-24s %8s %8s   %s\n", $NF, $3, $4, $1}' /etc/passwd |
	sort
	` 2> /dev/null

# Sorted list of users with shells
suser=`
	printf "* %-24s %s\n" "(Shell)" "(User)"      ;
	grep -v "/usr/bin/nologin" /etc/passwd        |
	awk -F ':' '{printf "* %-24s %s\n", $NF, $1}' |
	sort
	` 2> /dev/null

# Sorted list of users with home directories
huser=`
	printf "* %-24s %s\n" "(Home Directory)" "User"   ;
	grep -v ":/:" /etc/passwd                         |
	awk -F ':' '{printf "* %-24s %s\n", $(NF-1), $1}' |
	sort
	` 2> /dev/null

# Sorted list of groups
grups=`
	printf "* %-8s %s\n" "(GID)" "(Group)"                 ;
	awk -F ':' '{printf "* %-8s %s\n", $3, $1}' /etc/group |
	sort -V
	` 2> /dev/null

echo "--[ Users and Groups ]--"
echo "==> Users"
echo "$auser"
echo "==> Users with login shells"
echo "$suser"
echo "==> Users with home directories"
echo "$huser"
echo "==> Groups"
echo "$grups"
echo "----------------------------------------------"
echo

# Network Information

ipdata=`ip -o link show` # IP data.

# Interfaces
ifaces=`
	printf "* %-16s %s\n" "(Interface)" "(Flags)" ;
	echo "$ipdata"                                |
	awk -F ' ' '{printf "* %-16s %s\n", \
		substr($2,1,length($2)-1), $3}'           |
	sort
	` 2> /dev/null

# MAC addresses
maddrs=`
	printf "* %-16s %s\n" "(Interface)" "(MAC Address)" ;
	echo "$ipdata"                                      |
	awk -F ' ' '{printf "* %-16s %s\n", \
		substr($2,1,length($2)-1), $(NF-2)}'            |
	sort
	` 2> /dev/null

# IP addresses
iaddrs=`
	printf "* %-16s %s\n" "(Interface)" "(IP Address)" ;
	ip address                                         |
	grep "inet "                                       |
	awk -F ' ' '{printf "* %-16s %s\n", $NF, $2}'      ;
	printf "* %-16s %s\n" "(Public)" "(IP Address)"    ;
	printf "* %-16s " "Public"                         ;
	dig +short myip.opendns.com @resolver1.opendns.com ;
	` 2> /dev/null

# Open ports
oports=`
	printf "* %-8s %-24s %s\n" "(Type)" "(Address)" "(PID/Program)" ;
	netstat -tulpn 2> /dev/null                                     |
	grep "LISTEN"                                                   |
	awk -F ' ' '{printf "* %-8s %-24s %s\n", $1, $4, $NF}'
	` 2> /dev/null

echo "--[ Network Information ]--"
echo "==> Interfaces"
echo "$ifaces"
echo "==> MAC Addresses"
echo "$maddrs"
echo "==> IP Addresses"
echo "$iaddrs"
echo "==> Open Ports"
echo "$oports"
echo "----------------------------------------------"
echo

# Activity

# Current users
currusers=`
	printf "* %-12s %-6s %-16s %-8s %-8s %s\n" \
		"(Username)" "(Term)" "(IP Address)" "(Login)" "(Idle)" "(Current Activity)" ;
	w -i                                                                             |
	tail +3                                                                          |
	awk -F ' ' '{printf "* %-12s %-6s %-16s %-8s %-8s %s\n", \
		$1, $2, $3, $4, $5, $NF}'                                                    |
	sort
	` 2> /dev/null

# Current processes
currprocs=`
	printf "* %-12s %-8s %s\n" "(Username)" "(PID)" "(Process)" ;
	ps -aux                                                     |
	tail +2                                                     |
	awk -F ' ' '{printf "* %-12s %-8s %s\n", $1, $2, $11}'      |
	sort -V
	` 2> /dev/null

# Active services
srvactive=`
	systemctl --type=service --state=active |
	grep "service.*active"                  |
	awk -F ' ' '{print "*",$1}'             |
	sort
	` 2> /dev/null

# Running services
srvrunnin=`
	systemctl --type=service --state=running |
	grep "service.*running"                  |
	awk -F ' ' '{print "*",$1}'              |
	sort
	` 2> /dev/null

echo "--[ Activity ]--"
echo "==> Currently Online Users"
echo "$currusers"
echo "==> Currently Running Processes"
echo "$currprocs"
echo "==> Active Services"
echo "$srvactive"
echo "==> Running Services"
echo "$srvrunnin"
echo "----------------------------------------------"
echo

# Timers

# Sorted list of timers
timers=`
	printf "* %-32s %s\n" "(Timer)" "(Service)"        ;
	systemctl list-timers                              |
	grep ".*\.timer"                                   |
	awk -F ' ' '{printf "* %-32s %s\n", $(NF-1), $NF}' |
	sort
	` 2> /dev/null

echo "--[ Timers ]--"
echo "$timers"
echo "----------------------------------------------"
echo

# /etc/shadow Permissions

shadow=`ls -l /etc/shadow`                        2> /dev/null # Shadow dump
permis=`echo "$shadow" | awk -F ' ' '{print $1}'` 2> /dev/null # Permissions
sowner=`echo "$shadow" | awk -F ' ' '{print $3}'` 2> /dev/null # Owner
sgroup=`echo "$shadow" | awk -F ' ' '{print $4}'` 2> /dev/null # Group

echo "--[ /etc/shadow Permissions ]--"
echo "* Access : $permis"
echo "* Owner  : $sowner"
echo "* Group  : $sgroup"
echo "----------------------------------------------"
echo

# /etc/sudoers Permissions

sudoers=`ls -l /etc/sudoers`                        2> /dev/null # Sudoers dump
superms=`echo "$sudoers" | awk -F ' ' '{print $1}'` 2> /dev/null # Permissions
suowner=`echo "$sudoers" | awk -F ' ' '{print $3}'` 2> /dev/null # Owner
sugroup=`echo "$sudoers" | awk -F ' ' '{print $4}'` 2> /dev/null # Group

echo "--[ /etc/sudoers Permissions ]--"
echo "* Access : $superms"
echo "* Owner  : $suowner"
echo "* Group  : $sugroup"
echo "----------------------------------------------"
echo

# Possible SUIDs

# SUID files
suids=`
	find / -perm /6000 2> /dev/null |
	awk '{print "*",$0}'
	` 2> /dev/null

echo "--[ Possible SUIDs ]--"
echo "$suids"
echo "----------------------------------------------"
echo

# sudo History

# Read sudo history from bash history
shist=`
	grep "sudo " ~/.bash_history 2> /dev/null |
	awk '{print "*",$0}'
	` 2> /dev/null

echo "--[ sudo History ]--"
echo "$shist"
echo "----------------------------------------------"
echo

# SSH Keys

# Find SSH keys in home directories
sshkeys=`
	ls /home/*/.ssh/*.rsa /home/*/.ssh/*.pub \
		/root/.ssh/*.rsa /root/.ssh/*.pub 2> /dev/null |
	awk '{print "*",$0}'
	` 2> /dev/null

echo "--[ SSH Keys ]--"
echo "$sshkeys"
echo "----------------------------------------------"
echo
