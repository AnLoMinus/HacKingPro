#!/bin/sh
# $Revision$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# (c) Tim Brown, 2012
# <mailto:timb@nth-dimension.org.uk>
# <http://www.nth-dimension.org.uk/> / <http://www.machine.org.uk/>
#
# List potentially sensitive files

. lib/misc/file
. lib/misc/group
. lib/misc/stdio
. lib/misc/user

key_material_init () {
	stdio_message_log "key_material" "Starting at: `date`"
}

key_material_main () {
	# TODO we should expand this list
	for pattern in "*\.crt" "*\.cer" "*\.pem" "*\.p12" "*\.keystore" "*\.key"
	do
		file_show_non_symlink_perms " ${pattern}$" | while read filename permissions userid groupid
		do
			# exclude Firefox certificates
			case "${filename}" in
				/usr/share/ca-certificates/mozilla/*)
					continue
				;;
			esac

			case "${permissions}" in
				???????r??)
					stdio_message_warn "key_material" "${filename} is owned by user ${userid} (group ${groupid}) and is world-readable (${permissions})"
					;;
				????r?????)
					if [ "`group_is_in_group_name \"${groupid}\"`" -eq 1 ]
					then
						stdio_message_warn "key_material" "${filename} is owned by user ${userid} (group ${groupid}: YOU) and is group-readable (${permissions})"
					else
						stdio_message_log "key_material" "${filename} is owned by user ${userid} (group ${groupid}) and is group-readable (${permissions})"
					fi
					;;
				?r????????)
					if [ "`user_is_user_name \"${userid}\"`" -eq 1 ]
					then
						stdio_message_log "key_material" "${filename} is owned by user ${userid} (YOU) (group ${groupid}) (${permissions})"
					else
						stdio_message_debug "key_material" "${filename} is owned by user ${userid} (group ${groupid}) (${permissions})"
					fi
					;;
			esac
		done
	done
}

key_material_fini () {
	stdio_message_log "key_material" "Ending at: `date`"
}
