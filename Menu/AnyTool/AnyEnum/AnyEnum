#!/bin/sh
# Name : AnyEnum
# Date : April 2022
# Description : AnyEnum is a AnyEnum tools installer and package manager for hacker's.
# |
nc="\033[00m"
white="\033[1;37m"
grey="\033[0;37m"
purple="\033[0;35m"
red="\033[1;31m"
green="\033[32m"
yellow="\033[33m"
purple="\033[0;35m"
cyan="\033[1;36m"
cafe="\033[1;33m"
fiuscha="\033[0;35m"
blue="\033[34m"
orange="\033[38;5;122m"
# |
RED="$(printf '\033[31m')"
GREEN="$(printf '\033[32m')"
ORANGE="$(printf '\033[33m')"
BLUE="$(printf '\033[34m')"
MAGENTA="$(printf '\033[35m')"
CYAN="$(printf '\033[36m')"
WHITE="$(printf '\033[37m')"
BLACK="$(printf '\033[30m')"
REDBG="$(printf '\033[41m')"
GREENBG="$(printf '\033[42m')"
ORANGEBG="$(printf '\033[43m')"
BLUEBG="$(printf '\033[44m')"
MAGENTABG="$(printf '\033[45m')"
CYANBG="$(printf '\033[46m')"
WHITEBG="$(printf '\033[47m')"
BLACKBG="$(printf '\033[40m')"
RESETBG="$(printf '\e[0m')"
BLINK="$(printf '\033[5;31m')"
# |
Banner(){
  echo "$BLUE
   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ                  â–ˆâ–ˆâ–ˆâ–ˆ
  â–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–‘â–‘â–ˆâ–ˆâ–ˆ                  â–‘â–‘â–ˆâ–ˆâ–ˆ
   â–‘â–ˆâ–ˆâ–ˆâ–‘â–ˆâ–ˆâ–ˆ â–‘â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–‘â–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ
   â–‘â–ˆâ–ˆâ–ˆâ–‘â–‘â–ˆâ–ˆâ–ˆâ–‘â–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–‘â–‘â–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–‘â–‘   â–‘â–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–‘â–‘â–ˆâ–ˆâ–ˆ
   â–‘â–ˆâ–ˆâ–ˆ â–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–‘â–ˆâ–ˆâ–ˆ â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ
   â–‘â–ˆâ–ˆâ–ˆ  â–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–‘â–ˆâ–ˆâ–ˆâ–‘â–‘â–‘   â–‘â–‘â–‘â–‘â–ˆâ–ˆâ–ˆ â–‘â–ˆâ–ˆâ–ˆ â–‘â–ˆâ–ˆâ–ˆâ–‘â–‘â–‘
   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ$RED
  â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’
  â–’         â–€â–€â–ˆâ–€â–€ â–ˆâ–€â–€â–ˆ â–ˆâ–€â–€â–ˆ â–ˆ   â–ˆâ–€â–€             â–’
  â–’           â–ˆ   â–ˆ  â–ˆ â–ˆ  â–ˆ â–ˆ   â–€â–€â–ˆ             â–’
  â–’           â–€   â–€â–€â–€â–€ â–€â–€â–€â–€ â–€â–€â–€ â–€â–€â–€$ORANGE v0.0.1.3    â–’
  â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’
  "
}
logo="$(Banner)"


PromptFun(){
  promptfunc=$(echo "
  ${orange}  â”Œâ”€â”€[${blue}Anlominus${purple}ðŸ‘½${red}AnyEnum${cyan}$~${orange}]${cyan}
  ${orange}  â””â”€â”€â•¼${green} ")
  echo "$promptfunc"
}
prompt="$(PromptFun)"

# checking for system home dir
if [ -d $HOME ]; then
  home=$HOME
else
  home="~/"
fi

# checking for system bin dir
if [ -d /data/data/com.termux/files/usr/bin ]; then
  bin="/data/data/com.termux/files/usr/bin"
elif [ -d /usr/local/bin ]; then
  bin="/usr/local/bin"
elif [ -d /bin ]; then
  bin="/bin"
elif [ -d /sbin ]; then
  bin="/sbin"
fi

# checking for configuration dir
if [ -d /data/data/com.termux/files/usr/etc ]; then
  conf_dir="/data/data/com.termux/files/usr/etc"
elif [ -d /etc ]; then
  conf_dir="/etc"
fi

# configuration files
if [ -d $conf_dir/AnyEnum ]; then
  if [ -e $conf_dir/AnyEnum/data/tools.dat ]; then
    tools_data="$conf_dir/AnyEnum/data/tools.dat"
  fi
  if [ -e $conf_dir/AnyEnum/data/category.dat ]; then
    category_data="$conf_dir/AnyEnum/data/category.dat"
  fi
else
  if [ -e data/tools.dat ]; then
    tools_data="data/tools.dat"
  fi
  if [ -e data/category.dat ]; then
    category_data="data/category.dat"
  fi
fi

# checking for system root access
if [ `command -v sudo` ]; then
  sudo="sudo"
else
  sudo=""
fi

# checking for system package manager
if [ -e /data/data/com.termux/files/usr/bin/pkg ]; then
  pac="pkg"
  system="termux"
elif [ `command -v apt` ]; then
  pac="apt"
  system="linux"
elif [ `command -v apt-get` ]; then
  pac="apt-get"
  system="linux"
elif [ `command -v apk` ]; then
  pac="apk"
  system="linux"
elif [ `command -v yum` ]; then
  pac="yum"
  system="fedora"
elif [ `command -v brew` ]; then
  pac="brew"
  system="mac"
  sudo=""
fi

# install tools
install() {
  # get tool alias name
  tool_name=`grep '.' $tools_data | sort -f | sed -n "$1p" | cut -d"|" -f1`
  # get tool category name
  tool_category=`grep '.' $tools_data | sort -f | sed -n "$1p" | cut -d"|" -f3`
  # get tool package manager
  tool_installer=`grep '.' $tools_data | sort -f | sed -n "$1p" | cut -d"|" -f5`
  # tool dependency (requirements)
  tool_dependency=`grep '.' $tools_data | sort -f | sed -n "$1p" | cut -d"|" -f6 | tr ' ' ','`
  # tool url
  tool_url=`grep '.' $tools_data | sort -f | sed -n "$1p" | cut -d"|" -f4`
  # package name or tool name
  tool_pac=`grep '.' $tools_data | sort -f | sed -n "$1p" | cut -d"|" -f2`

  # check tool name is null or not
  if [ "$tool_name" ]; then

    case $tool_installer in

    # for default package
    package_manager)
      # check tool is already installed or not
      if [ ! `command -v $tool_pac` ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_pac != "" -a $tool_pac != "null" ]; then
              $sudo $pac install $tool_pac -y
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_pac != "" -a $tool_pac != "null" ]; then
              $pac install $tool_pac -y
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!"
          fi
        fi
        # check tool is installed or not
        if [ ! `command -v $tool_pac` ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: '$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for github tools
    git)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              $sudo git clone $tool_url ~/Anlominus/AnyEnumPro/$tool_category/$tool_name
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              git clone $tool_url ~/Anlominus/AnyEnumPro/$tool_category/$tool_name
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${purple}'$tool_name' ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: '$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for curl tools
    curl)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              $sudo curl -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac $tool_url
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              curl -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac $tool_url
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: '$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for wget tools
    wget)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              $sudo wget $tool_url -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              wget $tool_url -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: '$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;

    # for any new installer
    # put here
    esac
  fi
  # wait for user any input
  echo "$prompt "
  read tmp_inp
}

# install category tools
install_category_tool() {
  # get tool alias name
  tool_name=`grep '.' $tools_data | sort -f | sed -n "/$1/p" | sed -n "$2 p" | cut -d"|" -f1`
  # get tool category name
  tool_category=`grep '.' $tools_data | sort -f | sed -n "/$1/p" | sed -n "$2 p" | cut -d"|" -f3`
  # get tools package manager
  tool_installer=`grep '.' $tools_data | sort -f | sed -n "/$1/p" | sed -n "$2 p" | cut -d"|" -f5`
  # tool dependency (requirements)
  tool_dependency=`grep '.' $tools_data | sort -f | sed -n "/$1/p" | sed -n "$2 p" | cut -d"|" -f6 | tr ' ' ','`
  # tool url
  tool_url=`grep '.' $tools_data | sort -f | sed -n "/$1/p" | sed -n "$2 p" | cut -d"|" -f4`
  # package name or tool name
  tool_pac=`grep '.' $tools_data | sort -f | sed -n "/$1/p" | sed -n "$2 p" | cut -d"|" -f2`

  # check tool name is null or not
  if [ "$tool_name" ]; then

    case $tool_installer in

    # for default package
    package_manager)
      # check tool is already installed or not
      if [ ! `command -v $tool_pac` ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_pac != "" -a $tool_pac != "null" ]; then
              $sudo $pac install $tool_pac -y
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_pac != "" -a $tool_pac != "null" ]; then
              $pac install $tool_pac -y
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! `command -v $tool_pac` ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: '$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for github tools
    git)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
                $sudo git clone $tool_url ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              git clone $tool_url ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: '$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for curl tools
    curl)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              $sudo curl -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac $tool_url
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              curl -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac $tool_url
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: '$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for wget tools
    wget)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              $sudo wget $tool_url -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              wget $tool_url -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: '$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;

    # for any new installer
    # put here
    esac
  fi
  # wait for user any input
  echo "$prompt"
  read tmp_inp
}

# list all tools from data
all_tools() {
  while true; do
    clear
    # get all tools data
    echo " ${red} ___
//___// ${yellow}All Tools
"
    for data in `grep "." $tools_data | sort -f | grep -n '.' | sed -n 's/:/|/p' | cut -d"|" -f1,2 | tr ' ' '@'`; do
      # display tools name from data
      for tool in $data; do
        echo " ${green} $tool" | tr '|' ' ' | tr '@' ' '
      done
    done
    echo " ${green} 0 Back"
    echo "$prompt"
    read cmd
    # count total number of tools
    list=`grep -n "." $tools_data | wc -l`
    # process user input
    case ${cmd} in
      [1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9])
        if [ ${cmd} -le $list ]; then
          # install tools
          install ${cmd}
        else
          echo "${red}${cmd}: ${purple}invalid option!!"
          sleep 1
        fi
      ;;
      0|back|Back)
        break
      ;;
      *)
        echo "${red}${cmd}: ${purple}invalid option!!"
        sleep 1
      ;;
    esac
  done
}

# category function
category() {
  while true; do
    clear
    # get all category data
    echo " ${red} ___
//___// ${yellow}Generators Categories
"
    for data in `grep "." $category_data | grep -n '.' | sed -n 's/:/|/p' | cut -d"|" -f1,2 | tr ' ' '@'`; do
      # display category alias name from data
      for category in $data; do
        echo " ${green} $category" | tr '|' ' ' | tr '@' ' '
      done
    done
    echo " ${green} 0 Back"
    echo "$prompt"
    read cmd
    # count total number of category
    list=`grep -n "." $category_data | wc -l`
    # process user input
    case ${cmd} in
      [1-9]|[1-9][0-9])
        if [ ${cmd} -le $list ]; then
          while [ true ]; do
            clear
            # display all tools of selected category
            category=`grep '.' $category_data | sed -n "${cmd} p" | cut -d"|" -f2`
            category_alias=`grep '.' $category_data | sed -n "${cmd} p" | cut -d"|" -f1`
            # get all tools data and display
            echo " ${red} ___
//___// ${yellow}$category_alias
"
            for data in `grep "." $tools_data | sort -f | sed -n "/$category/p" | grep -n '.' | sed -n 's/:/|/p' | cut -d"|" -f1,2 | tr ' ' '@'`; do
              # display tools name from data
              for tool in $data; do
                echo " ${green} $tool" | tr '|' ' ' | tr '@' ' '
              done
            done
            echo " ${green} 0 Back"
            echo "$prompt"
            read tmp_cmd
            # count total number of tools in category
            list=`grep -n "." $tools_data | sed -n "/$category/p" | wc -l`
            # process user input
            case $tmp_cmd in
              [1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9])
                if [ $tmp_cmd -le $list ]; then
                  # install tools
                  install_category_tool $category $tmp_cmd
                else
                  echo "${red}$tmp_cmd: ${purple}invalid option!!"
                  sleep 1
                fi
              ;;
                0|back|Back)
                break
              ;;
              *)
                echo "${red}'$tmp_cmd': ${purple}invalid option!!"
                sleep 1
              ;;
            esac
          done
        else
          echo "${red}${cmd}: ${purple}invalid option!!"
          sleep 1
        fi
      ;;
      0|back|Back)
        break
      ;;
      *)
        echo "${red}${cmd}: ${purple}invalid option!!"
        sleep 1
      ;;
    esac
  done
}

# update AnyEnum function
update() {
  while true; do
    clear
    echo "$logo"
    echo " ${nc}[1] ${green} Update${nc}"
    echo " ${nc}[0] ${green} Back"
    echo "$prompt"
    read cmd
    case ${cmd} in
      1)
        # check user is online or not
        wget -q --spider http://google.com
        if [ $? -eq 0 ]; then
          echo "${green}Updating ...${nc}"
          sleep 1
          if [ `command -v git` ]; then
            if [ $sudo ]; then
              $sudo git clone https://github.com/Anlominus/AnyEnum.git ~/AnyEnum
              $sudo chmod +x ~/AnyEnum/install
              $sudo sh ~/AnyEnum/install
            else
              git clone https://github.com/Anlominus/AnyEnum.git ~/AnyEnum
              chmod +x ~/AnyEnum/install
              sh ~/AnyEnum/install
            fi
          else
            if [ $sudo ]; then
              $sudo $pac install git -y
              $sudo git clone https://github.com/Anlominus/AnyEnum.git ~/AnyEnum
              $sudo chmod +x ~/AnyEnum/install
              $sudo sh ~/AnyEnum/install
            else
              $pac install git -y
              git clone https://github.com/Anlominus/AnyEnum.git ~/AnyEnum
              chmod +x ~/AnyEnum/install
              sh ~/AnyEnum/install
            fi
          fi
          echo "${green} AnyEnum updated !!${nc}"
          sleep 1
        else
          echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!"
          sleep 1
        fi
      ;;
      0)
        break
      ;;
      *)
        echo "${red}${cmd}: ${purple}invalid option!!"
        sleep 1
      ;;
    esac
  done
}

# about AnyEnum function
about() {
  clear
  echo "$logo"
  echo " ${yellow}AnyEnum ${red} v0.0.2.2${nc}"
  echo " AnyEnum is a library of"
  echo " AnyEnum tools for termux"
  echo " and other linux distribution.\n"
  echo " ${red}Warning:${nc}"
  echo " We are not responsible for any misuse"
  echo " or damage caused by this program."
  echo " Use this tool at your own risk!"
  echo "$prompt"
  read tmp
}

# this is the main function
menu() {
  while true; do
    clear
    tools=`grep -n '.' $tools_data | wc -l`
    category=`grep -n '.' $category_data | wc -l`
    echo "$logo"
    echo "${cyan}     [1] ${green} All Generators $RED$tools"
    echo "${cyan}     [2] ${green} Generators Categories $RED$category"
    echo "${cyan}     [3] ${green} Update AnyEnum"
    echo "${cyan}     [4] ${green} About us"
    echo "${cyan}     [x] ${green} Exit"
    echo " "
    read -p "$prompt" cmd
    case ${cmd} in
      1)
        all_tools
      ;;
      2)
        category
      ;;
      3)
        update
      ;;
      4)
        about
      ;;
      x|exit|Exit)
        echo "${green}Exiting ....${nc}"
        break
      ;;
      *)
        echo "${red}${cmd}: ${purple}invalid option!!${nc}"
        sleep 1
      ;;
    esac
  done
}

# list all tools from data
cli_list_all() {
  # get all tools data
  tool=`grep "." $tools_data | sort -f | grep -n '.' | sed -n 's/:/|/p' | cut -d"|" -f1,2 | tr '|' ' '`
  # display tools name from data
  echo "${green} $tool${nc}"
}

# category function
cli_category() {
  # get all category data
  for data in `grep "." $category_data | grep -n '.' | sed -n 's/:/|/p' | cut -d"|" -f1,2 | tr ' ' '@'`; do
    # display category alias name from data
    for category in $data; do
      echo " ${green} $category${nc}" | tr '|' ' ' | tr '@' ' '
    done
  done
}

# update process
update_process() {
  # check file is downloaded or not
  if [ -e $home/AnyEnum/AnyEnum ]; then
    # removing old one
    if [ -e $bin/AnyEnum ]; then
      if [ -d $conf_dir/AnyEnum ]; then
        if [ $sudo ]; then
          $sudo rm -rf $bin/AnyEnum
          $sudo rm -rf $conf_dir/AnyEnum
        else
          rm -rf $bin/AnyEnum
          rm -rf $conf_dir/AnyEnum
        fi
      fi
    fi
  fi

  # updating AnyEnum
  if [ -e $home/AnyEnum/AnyEnum ]; then
    if [ $sudo ]; then
      $sudo mv -v $home/AnyEnum/AnyEnum $bin
      $sudo chmod +x $bin/AnyEnum
    else
      mv -v $home/AnyEnum/AnyEnum $bin
      chmod +x $bin/AnyEnum
    fi
  fi
  if [ -d $home/AnyEnum ]; then
    if [ $sudo ]; then
    $sudo mv -v $home/AnyEnum $conf_dir
    else
      mv -v $home/AnyEnum $conf_dir
    fi
  fi
}

# update AnyEnum function
cli_update() {
  # check user is online or not
  wget -q --spider http://google.com
  if [ $? -eq 0 ]; then
    echo "${green}Updating ...${nc}"
    sleep 1
    if [ `command -v git` ]; then
      if [ $sudo ]; then
        $sudo git clone https://github.com/Anlominus/AnyEnum.git ~/AnyEnum
        update_process
      else
        git clone https://github.com/Anlominus/AnyEnum.git ~/AnyEnum
        update_process
       fi
    else
      if [ $sudo ]; then
        $sudo $pac install git -y
        $sudo git clone https://github.com/Anlominus/AnyEnum.git ~/AnyEnum
        update_process
      else
        $pac install git -y
        git clone https://github.com/Anlominus/AnyEnum.git ~/AnyEnum
        update_process
      fi
    fi
    echo "${nc}'AnyEnum' ${green} updated successfully !!${nc}"
  else
    echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
  fi
}

# cli install process
install_process() {
  # get tool alias name
  tool_name=`echo $1 | cut -d"|" -f1`
  # package name or tool name
  tool_pac=`echo $1 | cut -d"|" -f2`
  # get tool category name
  tool_category=`echo $1 | cut -d"|" -f3`
  # tool url
  tool_url=`echo $1 | cut -d"|" -f4`
  # get tool package manager
  tool_installer=`echo $1 | cut -d"|" -f5`
  # tool dependency (requirements)
  tool_dependency=`echo $1 | cut -d"|" -f6 | tr ' ' ','`

  # check tool name is null or not
  if [ "$tool_name" ]; then

    case $tool_installer in

    # for default package
    package_manager)
      # check tool is already installed or not
      if [ ! `command -v $tool_pac` ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_pac != "" -a $tool_pac != "null" ]; then
              $sudo $pac install $tool_pac -y
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_pac != "" -a $tool_pac != "null" ]; then
              $pac install $tool_pac -y
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! `command -v $tool_pac` ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: ${nc}'$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for github tools
    git)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              $sudo git clone $tool_url ~/Anlominus/AnyEnumPro/$tool_category/$tool_name
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              git clone $tool_url ~/Anlominus/AnyEnumPro/$tool_category/$tool_name
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: ${nc}'$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for curl tools
    curl)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              $sudo curl -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac $tool_url
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              curl -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac $tool_url
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: ${nc}'$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;
    # for wget tools
    wget)
      # check tool is already installed or not
      if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
        # check sudo is null or not
        if [ $sudo ]; then
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            # install tool dependency
            echo "${green}Installing ...${nc}"
            sleep 1
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $sudo $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              $sudo wget $tool_url -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac
            fi
          else
            echo "${red}Sorry you are offline !!${nc}"
          fi
        else
          #check user is online or not
          wget -q --spider http://google.com
          if [ $? -eq 0 ]; then
            echo "${green}Installing ...${nc}"
            sleep 1
            # install tool dependency
            if [ $tool_dependency != "null" ]; then
              for dep_name in `echo $tool_dependency | tr ',' ' '`; do
                # installing dependency
                if [ ! `command -v $dep_name` ]; then
                  $pac install $dep_name -y
                fi
              done
            fi
            # installing tools
            if [ $tool_url != "" -a $tool_url != "null" ]; then
              wget $tool_url -o ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac
            fi
          else
            echo "${red}Sorry ${nc}: you are ${red} offline ${nc}!!${nc}"
          fi
        fi
        # check tool is installed or not
        if [ ! -e ~/Anlominus/AnyEnumPro/$tool_category/$tool_pac ]; then
          echo "${red}Sorry ${nc}: '$tool_name' ${red} is not installed !!${nc}"
        else
          echo "${nc}'$tool_name' ${nc}: ${green} is installed successfully !!${nc}"
        fi
      else
        echo "${red}Sorry ${nc}: ${nc}'$tool_name' ${green} is already installed !!${nc}"
      fi
    ;;

    # for any new installer
    # put here
    esac
  fi
}

# check tool is exists or not
cli_install() {
  # get tools data
  for data in `grep -i "^$1" $tools_data`; do
    # display tools name from data
    for tool in $data; do
      # convert to lower case and check tool name
      if [ `echo $tool | cut -d"|" -f1 | tr 'A-Z' 'a-z'` = `echo $1 | tr 'A-Z' 'a-z'` ]; then
        get_tool_data=$tool
      fi
    done
  done
  # check data exists or not
  if [ $get_tool_data ]; then
    install_process $get_tool_data
  else
    echo "${red}Sorry ${nc}: '$1' ${red} tool not found !!${nc}"
    similar=`grep -i "^$1" $tools_data | cut -d"|" -f1`
    if [ "$similar" ]; then
      echo "${blue}Did you mean${nc}:"
      echo -n "${green} "
      grep -i "^$1" $tools_data | cut -d"|" -f1
      echo -n "${nc}"
    fi
  fi
}

# search tool
cli_search() {
  # get tools data
  similar=`grep -i "^$1" $tools_data | cut -d"|" -f1`
  if [ "$similar" ]; then
    echo -n "${green}"
    grep -i "^$1" $tools_data | cut -d"|" -f1
    echo -n "${nc}"
  else
    echo "${red}Sorry ${nc}: '$1' ${red} tool not found !!${nc}"
  fi
}

# remove function
cli_remove() {
  # add remove tools functionality for remove tools data now it only uninstall AnyEnum.
  # removing AnyEnum only
  if [ -e $bin/AnyEnum ]; then
    if [ -d $conf_dir/AnyEnum ]; then
      if [ $sudo ]; then
        $sudo rm -rf $bin/AnyEnum
        $sudo rm -rf $conf_dir/AnyEnum
      else
        rm -rf $bin/AnyEnum
        rm -rf $conf_dir/AnyEnum
      fi
    fi
  fi
  # check AnyEnum removed or not
  if [ ! -e $bin/AnyEnum ]; then
    if [ ! -d $conf_dir/AnyEnum ]; then
      echo "${nc}'AnyEnum' : ${green} uninstalled successfully !!${nc}"
    fi
  fi
}

# cli mode
if [ $# -eq 1 ]; then
  case $1 in
    start)
      menu
    ;;
    list|-l)
      cli_list_all
    ;;
    update|-u)
      cli_update
    ;;
    remove|-r)
      cli_remove
    ;;
    help|-h)
      echo "${yellow}AnyEnum ${red} v0.1"
      echo "${nc}Usage ${nc}: ${yellow} AnyEnum ${nc}[option]... [toolname]...${nc}"
      echo "\n  ${blue}Option  \tDescription${nc}"
      echo "  -----------  \t--------------------"
      echo "  help, -h  \tdisplay this help."
      echo "  list, -l  \tlist all tools."
      echo "  list -a  \tlist all tools."
      echo "  -l a  \tlist all tools."
      echo "  install, -i  \tinstall any tools."
      echo "  search, -s  \tsearch tools."
      echo "  update, -u  \tupdate AnyEnum."
      echo "  start  \tstart AnyEnum menu mode."
    ;;
    *)
      echo "${red}Sorry ${nc}: '$1' ${red} invalid option!!${nc}"
      echo "${blue}type ${nc}:\n  'AnyEnum -h' or 'AnyEnum help' for help.${nc}"
    ;;
  esac
elif [ $# -eq 2 ]; then
  case $1 in
    list|-l)
      case $2 in
        -a|a)
          cli_list_all
         ;;
        *)
          echo "${red}Sorry ${nc}: '$2' ${red} invalid option!!${nc}"
          echo "${blue}type ${nc}:\n  'AnyEnum -h' or 'AnyEnum help' for help.${nc}"
        ;;
      esac
    ;;
    install|-i)
      cli_install $2
    ;;
    search|-s)
      cli_search $2
    ;;
    *)
      echo "${red}Sorry ${nc}: '$1' ${red} invalid option!!${nc}"
      echo "${blue}type ${nc}:\n  'AnyEnum -h' or 'AnyEnum help' for help.${nc}"
    ;;
  esac
else
  echo "${blue}type ${nc}:\n  'AnyEnum -h' or 'AnyEnum help' for help.${nc}"
fi
