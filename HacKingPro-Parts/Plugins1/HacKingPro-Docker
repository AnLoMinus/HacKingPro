#!/bin/sh
#!/bin/bash
#!/usr/bin/sh
#!/usr/bin/bash
#!/usr/bin/env sh
#!/usr/bin/env bash
#!/data/data/com.termux/files/usr/bin/sh
#!/data/data/com.termux/files/usr/bin/bash
###############################################################
#                           Docker                            #
#-Info--------------------------------------------------------#
#    Adding Deleting Users & Groups in Linux Systems          #
#-About-------------------------------------------------------#
#--╼▰[ Skils ]-╼▰[ MultiMan ]                                 #
#--╼▰[ Part of ]-╼▰[ HacKingPro ]                             #
#--╼▰[ Script Name ]-╼▰[ HacKingPro-Docker ]                  #
#--╼▰[ Author ]-╼▰[ AnLoMinus ]-╼▰[ Leon Yaakobov ]           #
###############################################################
# CREDIT: To All World Creators free Scripts & Tools          #
# BIG THANX TO ALL COMUNITY THAT SHARE ALL THAT FREE          #
# GREAT SCRIPTS                                               #
# Location: Made With LOVE IN ISRAEL !                        #
###############################################################
#-Metadata----------------------------------------------------#
#--╼▰[ Version ]-╼▰[ 1.0.0 ]                                  #
#--╼▰[ Source ]-╼▰[ https://github.com/AnLoMinus/HacKingPro ] #
#--╼▰[ Created ]-╼▰[ 31-08-2022 ]                             #
#--╼▰[ Update ]-╼▰[ 31-08-2022 ]                              #
###############################################################

#--╼▰[ Main Menu ]--╼▰ [ Admin ]
####### Table of contents

echo '

# Install Docker
# Note: Both virtual machines will require Docker to be installed.

# While you can install OpenCTI manually, save yourself the hassle and use the provided docker-compose file.
To install Docker run the following commands.
Steps taken from the Docker page.

# Update the repositories
sudo apt-get update
Install prereqs
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

# Add the GPG Key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

# Check the fingerprint of the key
sudo apt-key fingerprint 0EBFCD88

# Add the stable repository
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

# Install Docker and Docker Compose
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose

# Check installed version
sudo docker version

# Manage docker as a non root user
# Having to sudo every docker command is annoying so lets create a docker group and add your user into it.
# You will need to logoff and on again for the group to re-evaluate.
sudo usermod -aG docker $USER

# Create Docker Swarm
While you don’t technically need Docker Swarm to install OpenCTI,
this is how im going to be installing it as I want to incorporate more Docker containers for other features in the future.

# From the first node (AKA: Manager node) run the following command:
docker swarm init --advertise-addr $interface

# The output displays a command on what you run on the other node to join this swarm. Run that command on the second node. It will join this node as a worker node.
docker swarm join --token <LONG-TOKEN-ID> <IP-ADDRESS-OF-MANAGER:PORT>

# Install Portainer
# While you might enjoy managing containers manually,
# and its probably something you want to get your hands dirty with,
# using Portainer will make your life much easier.
# The installation of Portainer is a matter of downloading a docker-compose file and deploying a stack.
# We will then use Portainer to add the OpenCTI stack.

# This only needs to be performed on one node.
mkdir -p /opt/portainer && cd /opt/portainer
curl -L https://downloads.portainer.io/portainer-agent-stack.yml -o portainer-agent-stack.yml

# Before you stand up Portainer, we need to change the client port as it will conflict with OpenCTI. You can make this change by editing the portainer-agent-stack.yml file. Locate the ports section and change them from port 8000 / 9000 to port 18000 / 19000 respectively. The configuration should look like this afterwards.
    ports:
      - "19000:9000"
      - "18000:8000"

# With the ports changed, we can now stand up Portainer using the following command:
docker stack deploy --compose-file=portainer-agent-stack.yml portainer

# You can then login to Portainer by using the ip:19000 and setting your initial password

'

echo "

https://github.com/OpenCTI-Platform/docker/blob/master/docker-compose.yml
https://github.com/OpenCTI-Platform/docker
"
